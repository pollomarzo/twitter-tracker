{"ast":null,"code":"const path = require('path');\n\nconst dirPath = path.join(process.cwd(), '/twitterAPI');\n\nconst twitterAPI = require('../../twitterAPI/geoStream.js');\n\nexport default function handler(req, res) {\n  return new Promise(resolve => {\n    switch (req.method) {\n      case 'POST':\n        {\n          const parameters = {\n            track: req.body.track ? req.body.track : '',\n            follow: req.body.follow ? req.body.follow : '',\n            locations: req.body.coordinates ? req.body.coordinates : ''\n          };\n          const type = req.body.type;\n          const coordinates = req.body.coordinates;\n          console.log('starting stream on ', coordinates);\n          const streamID = twitterAPI.startStream(type, parameters);\n          res.setHeader('Content-Type', 'text/plain');\n          res.send(streamID);\n          return resolve();\n        }\n\n      case 'DELETE':\n        {\n          const streamID = req.body.id; //should be body\n\n          console.log(streamID);\n          const {\n            dataJson,\n            error\n          } = twitterAPI.closeStream(streamID);\n          res.json(dataJson);\n          return resolve();\n        }\n\n      default:\n        res.end();\n    }\n  });\n}","map":{"version":3,"sources":["/home/notchla/Documents/IngSw/twitter-tracker/pages/api/geoFilter.js"],"names":["path","require","dirPath","join","process","cwd","twitterAPI","handler","req","res","Promise","resolve","method","parameters","track","body","follow","locations","coordinates","type","console","log","streamID","startStream","setHeader","send","id","dataJson","error","closeStream","json","end"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,OAAO,GAAGF,IAAI,CAACG,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,aAAzB,CAAhB;;AACA,MAAMC,UAAU,GAAGL,OAAO,CAAC,+BAAD,CAA1B;;AAEA,eAAe,SAASM,OAAT,CAAiBC,GAAjB,EAAsBC,GAAtB,EAA2B;AACxC,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9B,YAAQH,GAAG,CAACI,MAAZ;AACE,WAAK,MAAL;AAAa;AACX,gBAAMC,UAAU,GAAG;AACjBC,YAAAA,KAAK,EAAEN,GAAG,CAACO,IAAJ,CAASD,KAAT,GAAiBN,GAAG,CAACO,IAAJ,CAASD,KAA1B,GAAkC,EADxB;AAEjBE,YAAAA,MAAM,EAAER,GAAG,CAACO,IAAJ,CAASC,MAAT,GAAkBR,GAAG,CAACO,IAAJ,CAASC,MAA3B,GAAoC,EAF3B;AAGjBC,YAAAA,SAAS,EAAET,GAAG,CAACO,IAAJ,CAASG,WAAT,GAAuBV,GAAG,CAACO,IAAJ,CAASG,WAAhC,GAA8C;AAHxC,WAAnB;AAKA,gBAAMC,IAAI,GAAGX,GAAG,CAACO,IAAJ,CAASI,IAAtB;AACA,gBAAMD,WAAW,GAAGV,GAAG,CAACO,IAAJ,CAASG,WAA7B;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,WAAnC;AACA,gBAAMI,QAAQ,GAAGhB,UAAU,CAACiB,WAAX,CAAuBJ,IAAvB,EAA6BN,UAA7B,CAAjB;AACAJ,UAAAA,GAAG,CAACe,SAAJ,CAAc,cAAd,EAA8B,YAA9B;AACAf,UAAAA,GAAG,CAACgB,IAAJ,CAASH,QAAT;AACA,iBAAOX,OAAO,EAAd;AACD;;AACD,WAAK,QAAL;AAAe;AACb,gBAAMW,QAAQ,GAAGd,GAAG,CAACO,IAAJ,CAASW,EAA1B,CADa,CACiB;;AAC9BN,UAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,gBAAM;AAAEK,YAAAA,QAAF;AAAYC,YAAAA;AAAZ,cAAsBtB,UAAU,CAACuB,WAAX,CAAuBP,QAAvB,CAA5B;AACAb,UAAAA,GAAG,CAACqB,IAAJ,CAASH,QAAT;AACA,iBAAOhB,OAAO,EAAd;AACD;;AACD;AACEF,QAAAA,GAAG,CAACsB,GAAJ;AAvBJ;AAyBD,GA1BM,CAAP;AA2BD","sourcesContent":["const path = require('path');\nconst dirPath = path.join(process.cwd(), '/twitterAPI');\nconst twitterAPI = require('../../twitterAPI/geoStream.js');\n\nexport default function handler(req, res) {\n  return new Promise((resolve) => {\n    switch (req.method) {\n      case 'POST': {\n        const parameters = {\n          track: req.body.track ? req.body.track : '',\n          follow: req.body.follow ? req.body.follow : '',\n          locations: req.body.coordinates ? req.body.coordinates : '',\n        };\n        const type = req.body.type;\n        const coordinates = req.body.coordinates;\n        console.log('starting stream on ', coordinates);\n        const streamID = twitterAPI.startStream(type, parameters);\n        res.setHeader('Content-Type', 'text/plain');\n        res.send(streamID);\n        return resolve();\n      }\n      case 'DELETE': {\n        const streamID = req.body.id; //should be body\n        console.log(streamID);\n        const { dataJson, error } = twitterAPI.closeStream(streamID);\n        res.json(dataJson);\n        return resolve();\n      }\n      default:\n        res.end();\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}