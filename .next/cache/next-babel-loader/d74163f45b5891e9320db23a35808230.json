{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport dynamic from 'next/dynamic';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles, NoSsr } from '@material-ui/core';\nimport Form from './Form';\nimport { startStream } from '../twitterAPI/geoStream';\nimport io from 'socket.io-client';\nvar Map = dynamic(function () {\n  return import('./Map');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./Map')];\n    },\n    modules: ['./Map']\n  }\n});\nvar useStyles = makeStyles(function () {\n  return {\n    container: {\n      position: 'relative',\n      height: '100vh',\n      width: '100vw',\n      backgroundColor: 'rgb(229, 242, 248)'\n    },\n    logo: {\n      height: '100vh',\n      width: '100vw',\n      display: 'flex',\n      position: 'absolute',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    logoImg: {\n      height: '250px',\n      color: '#1da1f2'\n    },\n    logoTitle: {\n      marginLeft: '-20px',\n      color: '#1da1f2'\n    },\n    main: {\n      height: 'calc(100vh - 60px)',\n      width: 'calc(100vw - 60px)',\n      margin: '30px',\n      padding: '10px',\n      position: 'absolute',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      border: 'solid 4px #1da1f2',\n      borderRadius: '10px'\n    },\n    header: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontSize: '20px'\n    },\n    titleImg: {\n      height: '60px',\n      width: '60px'\n    },\n    title: {\n      margin: '20px',\n      textAlign: 'center',\n      color: '#1da1f2'\n    },\n    content: {\n      width: '100%',\n      height: '100%',\n      display: 'flex'\n    },\n    mapWrapper: {\n      flexGrow: 2\n    }\n  };\n});\n\nvar MainContainer = function MainContainer() {\n  var _useStyles = useStyles(),\n      main = _useStyles.main,\n      header = _useStyles.header,\n      title = _useStyles.title,\n      content = _useStyles.content,\n      mapWrapper = _useStyles.mapWrapper; // To set the id of the current stream\n\n\n  var _useState = useState(undefined),\n      streamId = _useState[0],\n      setStreamId = _useState[1];\n\n  var _useState2 = useState([]),\n      tweets = _useState2[0],\n      setTweets = _useState2[1];\n\n  var startStream = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var coords, res, socket;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              coords = _ref.coords;\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.post('/api/geoFilter', {\n                coordinates: \"\".concat(coords.longitudeStart, \",\").concat(coords.latitudeStart, \",\").concat(coords.longitudeEnd, \",\").concat(coords.latitudeEnd)\n              });\n\n            case 4:\n              res = _context.sent;\n              setStreamId(res.data);\n              socket = io('http://localhost:3000');\n              socket.emit('register', res.data);\n              socket.on('data', function (data) {\n                return console.log('data');\n              });\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              console.error(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function startStream(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var stopStream = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios[\"delete\"]('/api/geoFilter', {\n                data: {\n                  id: streamId\n                },\n                headers: {\n                  Authorization: '***'\n                }\n              });\n\n            case 3:\n              res = _context2.sent;\n              setStreamId(null);\n              setTweets(res.data);\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    return function stopStream() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(NoSsr, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: main,\n      children: [/*#__PURE__*/_jsx(\"header\", {\n        className: header,\n        children: /*#__PURE__*/_jsx(\"h1\", {\n          className: title,\n          children: \"TWITTER TRACKER\"\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: content,\n        children: [/*#__PURE__*/_jsx(Form, {\n          onStart: startStream,\n          onStop: stopStream,\n          open: !!streamId\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: mapWrapper,\n          children: /*#__PURE__*/_jsx(Map, {})\n        })]\n      }), tweets.length > 0 && /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"h1\", {\n          children: \"Tweets\"\n        }), tweets.map(function (tweet) {\n          return /*#__PURE__*/_jsxs(\"div\", {\n            children: [tweet.text, \" from @\", tweet.user.name]\n          });\n        })]\n      })]\n    })\n  });\n};\n\nexport default MainContainer;","map":null,"metadata":{},"sourceType":"module"}