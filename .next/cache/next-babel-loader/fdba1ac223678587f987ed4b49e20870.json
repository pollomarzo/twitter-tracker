{"ast":null,"code":"const path = require(\"path\");\n\nconst dirPath = path.join(process.cwd(), \"/twitterAPI\");\n\nconst twitterAPI = require(\"../../twitterAPI/geoStream.js\");\n\nexport default function handler(req, res) {\n  return new Promise(resolve => {\n    if (req.method == \"POST\") {\n      const coordinates = req.body.coordinates;\n      console.log(\"starting stream on \", coordinates);\n      const streamID = twitterAPI.startStream(coordinates);\n      res.send(streamID);\n      resolve();\n    } else if (req.method == \"DELETE\") {\n      const streamID = req.body.id;\n      const {\n        dataJson,\n        error\n      } = twitterAPI.closeStream(streamID);\n      console.log(data);\n      res.json(data);\n      resolve();\n    } else {\n      res.end();\n    }\n  });\n}","map":{"version":3,"sources":["/home/notchla/Documents/IngSw/twitter-tracker/pages/api/geoFilter.js"],"names":["path","require","dirPath","join","process","cwd","twitterAPI","handler","req","res","Promise","resolve","method","coordinates","body","console","log","streamID","startStream","send","id","dataJson","error","closeStream","data","json","end"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,OAAO,GAAGF,IAAI,CAACG,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,aAAzB,CAAhB;;AACA,MAAMC,UAAU,GAAGL,OAAO,CAAC,+BAAD,CAA1B;;AAEA,eAAe,SAASM,OAAT,CAAiBC,GAAjB,EAAsBC,GAAtB,EAA2B;AACxC,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9B,QAAIH,GAAG,CAACI,MAAJ,IAAc,MAAlB,EAA0B;AACxB,YAAMC,WAAW,GAAGL,GAAG,CAACM,IAAJ,CAASD,WAA7B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,WAAnC;AACA,YAAMI,QAAQ,GAAGX,UAAU,CAACY,WAAX,CAAuBL,WAAvB,CAAjB;AACAJ,MAAAA,GAAG,CAACU,IAAJ,CAASF,QAAT;AACAN,MAAAA,OAAO;AACR,KAND,MAMO,IAAIH,GAAG,CAACI,MAAJ,IAAc,QAAlB,EAA4B;AACjC,YAAMK,QAAQ,GAAGT,GAAG,CAACM,IAAJ,CAASM,EAA1B;AACA,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAsBhB,UAAU,CAACiB,WAAX,CAAuBN,QAAvB,CAA5B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACAf,MAAAA,GAAG,CAACgB,IAAJ,CAASD,IAAT;AACAb,MAAAA,OAAO;AACR,KANM,MAMA;AACLF,MAAAA,GAAG,CAACiB,GAAJ;AACD;AACF,GAhBM,CAAP;AAiBD","sourcesContent":["const path = require(\"path\");\nconst dirPath = path.join(process.cwd(), \"/twitterAPI\");\nconst twitterAPI = require(\"../../twitterAPI/geoStream.js\");\n\nexport default function handler(req, res) {\n  return new Promise((resolve) => {\n    if (req.method == \"POST\") {\n      const coordinates = req.body.coordinates;\n      console.log(\"starting stream on \", coordinates);\n      const streamID = twitterAPI.startStream(coordinates);\n      res.send(streamID);\n      resolve();\n    } else if (req.method == \"DELETE\") {\n      const streamID = req.body.id;\n      const { dataJson, error } = twitterAPI.closeStream(streamID);\n      console.log(data);\n      res.json(data);\n      resolve();\n    } else {\n      res.end();\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}