{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { CircularProgress, Fade, Button, makeStyles } from '@material-ui/core';\nimport { AlertWindow, InputField } from '.';\nconst COORDINATE_RE = RegExp('^-?[1]?[0-8]?[0-9][.][0-9]{2}$');\nconst useStyles = makeStyles(() => ({\n  form: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  submitContainer: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  submitButton: {\n    margin: 10,\n    width: 100,\n    fontWeight: 800,\n    color: 'white',\n    backgroundColor: '#1DA1F2',\n    '&:hover': {\n      backgroundColor: 'lightblue',\n      color: '#1DA1F2'\n    }\n  }\n}));\n\nconst CoordsForm = ({\n  onStart,\n  onStop,\n  open\n}) => {\n  const {\n    form,\n    submitContainer,\n    submitButton\n  } = useStyles(); // A set of coords to initialize a geolocalized stream\n\n  const {\n    0: coords,\n    1: setCoordinates\n  } = useState({\n    latitudeStart: 0,\n    latitudeEnd: 0,\n    longitudeStart: 0,\n    longitudeEnd: 0\n  });\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n\n  const handleChange = e => setCoordinates(_objectSpread(_objectSpread({}, coords), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  const handleSubmit = () => {\n    const values = Object.values(coords);\n\n    if (values.every(value => value && COORDINATE_RE.test(value))) {\n      onStart({\n        coords\n      });\n    } else {\n      setError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: form,\n    children: [/*#__PURE__*/_jsx(InputField, {\n      label: \"Longitude start\",\n      fieldName: \"longitudeStart\",\n      handler: handleChange\n    }), /*#__PURE__*/_jsx(InputField, {\n      label: \"Latitude start\",\n      fieldName: \"latitudeStart\",\n      handler: handleChange\n    }), /*#__PURE__*/_jsx(InputField, {\n      label: \"Longitude end\",\n      fieldName: \"longitudeEnd\",\n      handler: handleChange\n    }), /*#__PURE__*/_jsx(InputField, {\n      label: \"Latitude end\",\n      fieldName: \"latitudeEnd\",\n      handler: handleChange\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: submitContainer,\n      children: [open ? /*#__PURE__*/_jsx(Button, {\n        onClick: onStop,\n        variant: \"contained\",\n        className: submitButton,\n        color: \"default\",\n        children: \"STOP\"\n      }) : /*#__PURE__*/_jsx(Button, {\n        onClick: handleSubmit,\n        variant: \"contained\",\n        className: submitButton,\n        color: \"default\",\n        children: \"START\"\n      }), /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(Fade, {\n          in: open,\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsx(CircularProgress, {})\n        })\n      })]\n    }), /*#__PURE__*/_jsx(AlertWindow, {\n      isOpen: error,\n      onConfirm: setError,\n      title: \"Error\",\n      msg: \"An acceptable input is a number in range [-180.00, 180.00] written with this formula\"\n    })]\n  });\n};\n\nexport default CoordsForm;","map":{"version":3,"sources":["/home/notchla/Documents/IngSw/twitter-tracker/components/Form.js"],"names":["React","useState","CircularProgress","Fade","Button","makeStyles","AlertWindow","InputField","COORDINATE_RE","RegExp","useStyles","form","height","display","flexDirection","submitContainer","alignItems","submitButton","margin","width","fontWeight","color","backgroundColor","CoordsForm","onStart","onStop","open","coords","setCoordinates","latitudeStart","latitudeEnd","longitudeStart","longitudeEnd","error","setError","handleChange","e","target","name","value","handleSubmit","values","Object","every","test"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { CircularProgress, Fade, Button, makeStyles } from '@material-ui/core';\nimport { AlertWindow, InputField } from '.';\n\nconst COORDINATE_RE = RegExp('^-?[1]?[0-8]?[0-9][.][0-9]{2}$');\n\nconst useStyles = makeStyles(() => ({\n  form: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  submitContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  submitButton: {\n    margin: 10,\n    width: 100,\n    fontWeight: 800,\n    color: 'white',\n    backgroundColor: '#1DA1F2',\n    '&:hover': {\n      backgroundColor: 'lightblue',\n      color: '#1DA1F2',\n    },\n  },\n}));\n\nconst CoordsForm = ({ onStart, onStop, open }) => {\n  const { form, submitContainer, submitButton } = useStyles();\n  // A set of coords to initialize a geolocalized stream\n  const [coords, setCoordinates] = useState({\n    latitudeStart: 0,\n    latitudeEnd: 0,\n    longitudeStart: 0,\n    longitudeEnd: 0,\n  });\n  const [error, setError] = useState(false);\n\n  const handleChange = (e) =>\n    setCoordinates({ ...coords, [e.target.name]: e.target.value });\n\n  const handleSubmit = () => {\n    const values = Object.values(coords);\n    if (values.every((value) => value && COORDINATE_RE.test(value))) {\n      onStart({ coords });\n    } else {\n      setError(true);\n    }\n  };\n\n  return (\n    <div className={form}>\n      <InputField\n        label=\"Longitude start\"\n        fieldName=\"longitudeStart\"\n        handler={handleChange}\n      />\n      <InputField\n        label=\"Latitude start\"\n        fieldName=\"latitudeStart\"\n        handler={handleChange}\n      />\n      <InputField label=\"Longitude end\" fieldName=\"longitudeEnd\" handler={handleChange} />\n      <InputField label=\"Latitude end\" fieldName=\"latitudeEnd\" handler={handleChange} />\n\n      <div className={submitContainer}>\n        {open ? (\n          <Button\n            onClick={onStop}\n            variant=\"contained\"\n            className={submitButton}\n            color=\"default\"\n          >\n            STOP\n          </Button>\n        ) : (\n          <Button\n            onClick={handleSubmit}\n            variant=\"contained\"\n            className={submitButton}\n            color=\"default\"\n          >\n            START\n          </Button>\n        )}\n\n        <div>\n          <Fade in={open} unmountOnExit>\n            <CircularProgress />\n          </Fade>\n        </div>\n      </div>\n      <AlertWindow\n        isOpen={error}\n        onConfirm={setError}\n        title=\"Error\"\n        msg=\"An acceptable input is a number in range [-180.00, 180.00] written with this formula\"\n      />\n    </div>\n  );\n};\n\nexport default CoordsForm;\n"]},"metadata":{},"sourceType":"module"}