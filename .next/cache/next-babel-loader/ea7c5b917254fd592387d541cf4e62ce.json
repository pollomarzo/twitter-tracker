{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport dynamic from 'next/dynamic';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles, NoSsr } from '@material-ui/core';\nimport Form from './Form';\nimport { startStream } from '../twitterAPI/geoStream';\nimport io from 'socket.io-client';\nconst Map = dynamic(() => import('./Map'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./Map')],\n    modules: ['./Map']\n  }\n});\nconst useStyles = makeStyles(() => ({\n  container: {\n    position: 'relative',\n    height: '100vh',\n    width: '100vw',\n    backgroundColor: 'rgb(229, 242, 248)'\n  },\n  logo: {\n    height: '100vh',\n    width: '100vw',\n    display: 'flex',\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  logoImg: {\n    height: '250px',\n    color: '#1da1f2'\n  },\n  logoTitle: {\n    marginLeft: '-20px',\n    color: '#1da1f2'\n  },\n  main: {\n    height: 'calc(100vh - 60px)',\n    width: 'calc(100vw - 60px)',\n    margin: '30px',\n    padding: '10px',\n    position: 'absolute',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    border: 'solid 4px #1da1f2',\n    borderRadius: '10px'\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: '20px'\n  },\n  titleImg: {\n    height: '60px',\n    width: '60px'\n  },\n  title: {\n    margin: '20px',\n    textAlign: 'center',\n    color: '#1da1f2'\n  },\n  content: {\n    width: '100%',\n    height: '100%',\n    display: 'flex'\n  },\n  mapWrapper: {\n    flexGrow: 2\n  }\n}));\n\nconst MainContainer = () => {\n  const {\n    main,\n    header,\n    title,\n    content,\n    mapWrapper\n  } = useStyles(); // To set the id of the current stream\n\n  const {\n    0: streamId,\n    1: setStreamId\n  } = useState(undefined);\n  const {\n    0: tweets,\n    1: setTweets\n  } = useState([]);\n\n  const startStream = async ({\n    coords\n  }) => {\n    try {\n      const res = await axios.post('/api/geoFilter', {\n        coordinates: `${coords.longitudeStart},${coords.latitudeStart},${coords.longitudeEnd},${coords.latitudeEnd}`\n      });\n      setStreamId(res.data);\n      const socket = io('http://localhost:3000');\n      socket.emit('register', res.data);\n      socket.on('data', data => console.log('data'));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const stopStream = async () => {\n    try {\n      const res = await axios.delete('/api/geoFilter', {\n        data: {\n          id: streamId\n        },\n        headers: {\n          Authorization: '***'\n        }\n      });\n      setStreamId(null);\n      setTweets(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(NoSsr, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: main,\n      children: [/*#__PURE__*/_jsx(\"header\", {\n        className: header,\n        children: /*#__PURE__*/_jsx(\"h1\", {\n          className: title,\n          children: \"TWITTER TRACKER\"\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: content,\n        children: [/*#__PURE__*/_jsx(Form, {\n          onStart: startStream,\n          onStop: stopStream,\n          open: !!streamId\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: mapWrapper,\n          children: /*#__PURE__*/_jsx(Map, {})\n        })]\n      }), tweets.length > 0 && /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"h1\", {\n          children: \"Tweets\"\n        }), tweets.map(tweet => /*#__PURE__*/_jsxs(\"div\", {\n          children: [tweet.text, \" from @\", tweet.user.name]\n        }))]\n      })]\n    })\n  });\n};\n\nexport default MainContainer;","map":{"version":3,"sources":["/home/notchla/Documents/IngSw/twitter-tracker/components/MainContainer.js"],"names":["dynamic","React","useState","axios","makeStyles","NoSsr","Form","startStream","io","Map","ssr","useStyles","container","position","height","width","backgroundColor","logo","display","justifyContent","alignItems","logoImg","color","logoTitle","marginLeft","main","margin","padding","flexDirection","border","borderRadius","header","fontSize","titleImg","title","textAlign","content","mapWrapper","flexGrow","MainContainer","streamId","setStreamId","undefined","tweets","setTweets","coords","res","post","coordinates","longitudeStart","latitudeStart","longitudeEnd","latitudeEnd","data","socket","emit","on","console","log","err","error","stopStream","delete","id","headers","Authorization","length","map","tweet","text","user","name"],"mappings":"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","sourcesContent":["import dynamic from 'next/dynamic';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles, NoSsr } from '@material-ui/core';\n\nimport Form from './Form';\nimport { startStream } from '../twitterAPI/geoStream';\n\nimport io from 'socket.io-client';\n\nconst Map = dynamic(() => import('./Map'), { ssr: false });\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    position: 'relative',\n    height: '100vh',\n    width: '100vw',\n    backgroundColor: 'rgb(229, 242, 248)',\n  },\n  logo: {\n    height: '100vh',\n    width: '100vw',\n    display: 'flex',\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  logoImg: {\n    height: '250px',\n    color: '#1da1f2',\n  },\n  logoTitle: {\n    marginLeft: '-20px',\n    color: '#1da1f2',\n  },\n  main: {\n    height: 'calc(100vh - 60px)',\n    width: 'calc(100vw - 60px)',\n    margin: '30px',\n    padding: '10px',\n    position: 'absolute',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    border: 'solid 4px #1da1f2',\n    borderRadius: '10px',\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: '20px',\n  },\n  titleImg: {\n    height: '60px',\n    width: '60px',\n  },\n  title: {\n    margin: '20px',\n    textAlign: 'center',\n    color: '#1da1f2',\n  },\n  content: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n  },\n  mapWrapper: {\n    flexGrow: 2,\n  },\n}));\n\nconst MainContainer = () => {\n  const { main, header, title, content, mapWrapper } = useStyles();\n  // To set the id of the current stream\n  const [streamId, setStreamId] = useState(undefined);\n  const [tweets, setTweets] = useState([]);\n\n  const startStream = async ({ coords }) => {\n    try {\n      const res = await axios.post('/api/geoFilter', {\n        coordinates: `${coords.longitudeStart},${coords.latitudeStart},${coords.longitudeEnd},${coords.latitudeEnd}`,\n      });\n      setStreamId(res.data);\n      const socket = io('http://localhost:3000');\n\n      socket.emit('register', res.data);\n\n      socket.on('data', (data) => console.log('data'));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const stopStream = async () => {\n    try {\n      const res = await axios.delete('/api/geoFilter', {\n        data: { id: streamId },\n        headers: { Authorization: '***' },\n      });\n      setStreamId(null);\n      setTweets(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <NoSsr>\n      <div className={main}>\n        <header className={header}>\n          <h1 className={title}>TWITTER TRACKER</h1>\n        </header>\n        <div className={content}>\n          <Form onStart={startStream} onStop={stopStream} open={!!streamId} />\n          <div className={mapWrapper}>\n            <Map />\n          </div>\n        </div>\n        {tweets.length > 0 && (\n          <div>\n            <h1>Tweets</h1>\n            {tweets.map((tweet) => (\n              <div>\n                {tweet.text} from @{tweet.user.name}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </NoSsr>\n  );\n};\n\nexport default MainContainer;\n"]},"metadata":{},"sourceType":"module"}