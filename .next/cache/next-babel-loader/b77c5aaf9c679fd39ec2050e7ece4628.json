{"ast":null,"code":"const {\n  v4: uuidv4\n} = require(\"uuid\");\n\nconst Twitter = require(\"twitter-lite\");\n\nconst credentials = require(\"./.credentials\");\n\nlet streams = {};\n\nfunction exportJSON(data) {\n  json = {\n    data: []\n  };\n  data.forEach((value, index) => {\n    json.data.push(value);\n  });\n  var json = JSON.stringify(json.data);\n  return json;\n}\n\nconst client = new Twitter({\n  subdomain: \"api\",\n  version: \"1.1\",\n  consumer_key: credentials.consumer_key,\n  // from Twitter.\n  consumer_secret: credentials.consumer_secret,\n  // from Twitter.\n  access_token_key: credentials.access_token_key,\n  // from your User (oauth_token)\n  access_token_secret: credentials.access_token_secret // from your User (oauth_token_secret);\n\n});\n\nexports.startStream = parameters => {\n  const streamId = uuidv4();\n  const stream = client.stream(\"statuses/filter\", parameters);\n  stream.on(\"start\", () => {\n    streams[streamId] = {\n      stream,\n      data: [],\n      error: null\n    };\n    console.log(\"stream started\");\n  });\n  stream.on(\"error\", error => streams[streamId].error = error); //todo handler error\n\n  stream.on(\"data\", tweet => {\n    streams[streamId].data.push(tweet);\n    console.log(tweet.text);\n  });\n  stream.on(\"end\", () => delete streams[streamId]);\n  return streamId;\n};\n\nexports.closeStream = streamId => {\n  const {\n    stream,\n    data,\n    error\n  } = streams[streamId];\n  console.log(\"closeStream data:\", data);\n  stream.emit(\"end\");\n  stream.removeAllListeners();\n  const dataJson = exportJSON(data);\n  return {\n    dataJson,\n    error\n  };\n};","map":null,"metadata":{},"sourceType":"script"}