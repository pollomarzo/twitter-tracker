{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport dynamic from 'next/dynamic';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles, NoSsr } from '@material-ui/core';\nimport Form from './Form';\nimport { startStream } from '../twitterAPI/geoStream';\nimport io from 'socket.io-client';\nconst Map = dynamic(() => import('./Map'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./Map')],\n    modules: ['./Map']\n  }\n});\nconst useStyles = makeStyles(() => ({\n  container: {\n    position: 'relative',\n    height: '100vh',\n    width: '100vw',\n    backgroundColor: 'rgb(229, 242, 248)'\n  },\n  logo: {\n    height: '100vh',\n    width: '100vw',\n    display: 'flex',\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  logoImg: {\n    height: '250px',\n    color: '#1da1f2'\n  },\n  logoTitle: {\n    marginLeft: '-20px',\n    color: '#1da1f2'\n  },\n  main: {\n    height: 'calc(100vh - 60px)',\n    width: 'calc(100vw - 60px)',\n    margin: '30px',\n    padding: '10px',\n    position: 'absolute',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    border: 'solid 4px #1da1f2',\n    borderRadius: '10px'\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: '20px'\n  },\n  titleImg: {\n    height: '60px',\n    width: '60px'\n  },\n  title: {\n    margin: '20px',\n    textAlign: 'center',\n    color: '#1da1f2'\n  },\n  content: {\n    width: '100%',\n    height: '100%',\n    display: 'flex'\n  },\n  mapWrapper: {\n    flexGrow: 2\n  }\n}));\n\nconst MainContainer = () => {\n  const {\n    main,\n    header,\n    title,\n    content,\n    mapWrapper\n  } = useStyles(); // To set the id of the current stream\n\n  const {\n    0: streamId,\n    1: setStreamId\n  } = useState(undefined);\n  const {\n    0: tweets,\n    1: setTweets\n  } = useState([]);\n\n  const startStream = async ({\n    coords\n  }) => {\n    try {\n      const res = await axios.post('/api/geoFilter', {\n        coordinates: `${coords.longitudeStart},${coords.latitudeStart},${coords.longitudeEnd},${coords.latitudeEnd}`\n      });\n      setStreamId(res.data);\n      const socket = io('http://localhost:3000');\n      socket.emit('register', res.data);\n      socket.on('data', data => console.log('data'));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const stopStream = async () => {\n    try {\n      const res = await axios.delete('/api/geoFilter', {\n        data: {\n          id: streamId\n        },\n        headers: {\n          Authorization: '***'\n        }\n      });\n      setStreamId(null);\n      setTweets(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(NoSsr, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: main,\n      children: [/*#__PURE__*/_jsx(\"header\", {\n        className: header,\n        children: /*#__PURE__*/_jsx(\"h1\", {\n          className: title,\n          children: \"TWITTER TRACKER\"\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: content,\n        children: [/*#__PURE__*/_jsx(Form, {\n          onStart: startStream,\n          onStop: stopStream,\n          open: !!streamId\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: mapWrapper,\n          children: /*#__PURE__*/_jsx(Map, {})\n        })]\n      }), tweets.length > 0 && /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"h1\", {\n          children: \"Tweets\"\n        }), tweets.map(tweet => /*#__PURE__*/_jsxs(\"div\", {\n          children: [tweet.text, \" from @\", tweet.user.name]\n        }))]\n      })]\n    })\n  });\n};\n\nexport default MainContainer;","map":null,"metadata":{},"sourceType":"module"}