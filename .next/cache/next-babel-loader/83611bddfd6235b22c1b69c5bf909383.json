{"ast":null,"code":"const path = require(\"path\");\n\nconst dirPath = path.join(process.cwd(), \"/twitterAPI\");\n\nconst twitterAPI = require(\"../../twitterAPI/geoStream.js\");\n\nexport default function handler(req, res) {\n  return new Promise(resolve => {\n    if (req.method == \"POST\") {\n      const parameters = {\n        track: req.body.track ? req.body.track : \"\",\n        follow: req.body.follow ? req.body.follow : \"\",\n        locations: req.body.coordinates ? req.body.coordinates : \"\"\n      };\n      const type = req.body.type;\n      const coordinates = req.body.coordinates;\n      console.log(\"starting stream on \", coordinates);\n      const streamID = twitterAPI.startStream(type, parameters);\n      res.send(streamID);\n      resolve();\n    } else if (req.method == \"DELETE\") {\n      const streamID = req.body.id; //should be body\n\n      console.log(streamID);\n      const {\n        dataJson,\n        error\n      } = twitterAPI.closeStream(streamID);\n      res.json(dataJson);\n      resolve();\n    } else {\n      res.end();\n    }\n  });\n}","map":{"version":3,"sources":["/home/notchla/Documents/IngSw/twitter-tracker/pages/api/geoFilter.js"],"names":["path","require","dirPath","join","process","cwd","twitterAPI","handler","req","res","Promise","resolve","method","parameters","track","body","follow","locations","coordinates","type","console","log","streamID","startStream","send","id","dataJson","error","closeStream","json","end"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,OAAO,GAAGF,IAAI,CAACG,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,aAAzB,CAAhB;;AACA,MAAMC,UAAU,GAAGL,OAAO,CAAC,+BAAD,CAA1B;;AAEA,eAAe,SAASM,OAAT,CAAiBC,GAAjB,EAAsBC,GAAtB,EAA2B;AACxC,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9B,QAAIH,GAAG,CAACI,MAAJ,IAAc,MAAlB,EAA0B;AACxB,YAAMC,UAAU,GAAG;AACjBC,QAAAA,KAAK,EAAEN,GAAG,CAACO,IAAJ,CAASD,KAAT,GAAiBN,GAAG,CAACO,IAAJ,CAASD,KAA1B,GAAkC,EADxB;AAEjBE,QAAAA,MAAM,EAAER,GAAG,CAACO,IAAJ,CAASC,MAAT,GAAkBR,GAAG,CAACO,IAAJ,CAASC,MAA3B,GAAoC,EAF3B;AAGjBC,QAAAA,SAAS,EAAET,GAAG,CAACO,IAAJ,CAASG,WAAT,GAAuBV,GAAG,CAACO,IAAJ,CAASG,WAAhC,GAA8C;AAHxC,OAAnB;AAKA,YAAMC,IAAI,GAAGX,GAAG,CAACO,IAAJ,CAASI,IAAtB;AACA,YAAMD,WAAW,GAAGV,GAAG,CAACO,IAAJ,CAASG,WAA7B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,WAAnC;AACA,YAAMI,QAAQ,GAAGhB,UAAU,CAACiB,WAAX,CAAuBJ,IAAvB,EAA6BN,UAA7B,CAAjB;AACAJ,MAAAA,GAAG,CAACe,IAAJ,CAASF,QAAT;AACAX,MAAAA,OAAO;AACR,KAZD,MAYO,IAAIH,GAAG,CAACI,MAAJ,IAAc,QAAlB,EAA4B;AACjC,YAAMU,QAAQ,GAAGd,GAAG,CAACO,IAAJ,CAASU,EAA1B,CADiC,CACH;;AAC9BL,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,YAAM;AAAEI,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAsBrB,UAAU,CAACsB,WAAX,CAAuBN,QAAvB,CAA5B;AACAb,MAAAA,GAAG,CAACoB,IAAJ,CAASH,QAAT;AACAf,MAAAA,OAAO;AACR,KANM,MAMA;AACLF,MAAAA,GAAG,CAACqB,GAAJ;AACD;AACF,GAtBM,CAAP;AAuBD","sourcesContent":["const path = require(\"path\");\nconst dirPath = path.join(process.cwd(), \"/twitterAPI\");\nconst twitterAPI = require(\"../../twitterAPI/geoStream.js\");\n\nexport default function handler(req, res) {\n  return new Promise((resolve) => {\n    if (req.method == \"POST\") {\n      const parameters = {\n        track: req.body.track ? req.body.track : \"\",\n        follow: req.body.follow ? req.body.follow : \"\",\n        locations: req.body.coordinates ? req.body.coordinates : \"\",\n      };\n      const type = req.body.type;\n      const coordinates = req.body.coordinates;\n      console.log(\"starting stream on \", coordinates);\n      const streamID = twitterAPI.startStream(type, parameters);\n      res.send(streamID);\n      resolve();\n    } else if (req.method == \"DELETE\") {\n      const streamID = req.body.id; //should be body\n      console.log(streamID);\n      const { dataJson, error } = twitterAPI.closeStream(streamID);\n      res.json(dataJson);\n      resolve();\n    } else {\n      res.end();\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}