{"version":3,"sources":["components/AlertWindow.js","constants.js","context/UserContext.js","components/Auth.js","components/InputComponent/InputField.js","components/InputComponent/SelectField.js","components/Filters.js","components/GraphSnippets/AreaChart.js","components/GraphSnippets/BarChart.js","components/GraphSnippets/PieChart.js","components/GraphSnippets/TableChart.js","components/Graphs.js","components/InsightTabs.js","components/MainContainer.js","assets/twitter-marker.png","components/EditControl.js","components/Map.js","components/NotifySettings.js","components/ScheduleTweet.js","components/ShowDialogIcon.js","components/StreamParams.js","components/TweetList.js","components/WelcomingAnimation.js","components/WordCloud.js","components/Home.js","context/ThemeContext.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","dialog","color","palette","primary","main","submitButton","margin","width","fontWeight","backgroundColor","dark","light","AlertWindow","error","resetErrorBoundary","title","message","Dialog","open","DialogTitle","className","DialogContent","DialogContentText","DialogActions","Button","variant","onClick","UserError","reset","Error","ErrorCatcher","children","useState","undefined","setError","FallbackComponent","onError","err","onReset","BASE_URL","GEO_FILTER","GET_IDS","REQUEST_TOKEN","AUTH","SEND_TWEET","NOTIFICATION","SETTINGS","WORDCLOUD_ID","FABsDesc","UserContext","React","createContext","UserProvider","provided","authProps","setAuthProps","Provider","value","useUser","useContext","Auth","query","location","useLocation","URLSearchParams","search","useQuery","oauthToken","get","oauthVerifier","history","useHistory","useEffect","a","axios","params","result","data","push","console","requestAccess","Grid","container","justify","xs","Typography","CircularProgress","textField","borderWidth","borderRadius","secondary","InputField","label","fieldName","handler","text","helperText","hasError","others","TextField","name","onChange","InputProps","startAdornment","InputAdornment","position","select","height","marginBottom","SelectField","id","FormControl","InputLabel","Select","labelId","MenuItem","genericInput","button","padding","Filters","list","setFilteredList","filters","setFilters","specificInputFieldProps","shrink","style","onChangeFilter","e","target","log","useMemo","countryList","reduce","accList","tweet","place","includes","country_code","cityList","type","minDate","InputLabelProps","maxDate","minTime","maxTime","geoloc","country","map","element","city","filteredTweets","filter","timestamp","Date","created_at","minTimestamp","maxTimestamp","isGeolocalized","user","geo_enabled","cityName","countryCode","areachart","fill","AreaChart","dataKey","stroke","fillOpacity","barchart","BarChart","strokeDasharray","piechart","PieGraph","colors","outerRadius","voice","index","verticalAlign","iconSize","iconType","table","minWidth","marginRight","marginLeft","TableChart","header","sort","prev","next","count","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","statsTemplate","hours","days","subject","geolocalization","retweet","cities","countries","Graphs","updatedStats","stats","JSON","parse","stringify","forEach","creationHour","creationDay","Number","isRetweeted","cityToUpdate","find","countryName","countryToUpdate","code","updateStats","getHours","getDay","Boolean","coordinates","retweeted_status","PieChart","root","flexGrow","background","paper","maxHeight","overflowY","scrollbarWidth","InsightTabs","focusedTab","setFocused","Tabs","_","newVal","textColor","child","Tab","props","tabName","Box","top","left","default","overflow","marginTop","mainContainer","settingsIcon","spacing","socket","io","transports","path","COORDINATE_RE","MainContainer","launch","useErrorHandler","streamId","setStreamId","tweets","setTweets","tweetsFiltered","setTweetsFiltered","ne","lat","lng","sw","coords","setCoords","track","follow","setParams","fetchSettings","res","settings","locations","split","oldStreamId","b","document","cookie","match","pop","getCookieValue","emit","on","prevTweets","startStream","streamParameters","constraints","post","withCredentials","stopStream","delete","headers","Authorization","off","handleAuthentication","window","replace","token","response","onAddRect","useCallback","nelat","nelng","swlat","swlng","alignItems","item","icon","desc","activeStream","onStart","values","Object","flat","every","test","onStop","onParamChange","length","iconOnly","handleAuth","disabled","tweetsList","setCoordinates","showToolbars","setList","createControlComponent","createInstance","useElement","createElementHook","context","layerContainer","instance","edit","featureGroup","useControl","createControlHook","createLeafComponent","useLeafletContext","elementRef","current","positionRef","useRef","onCreated","onEdit","onDeleted","onDrawCreate","addLayer","layer","addTo","leaflet","Draw","Event","CREATED","DELETED","EDITRESIZE","EDITMOVE","remove","setPosition","DrawRectangleControl","options","Control","draw","polyline","polygon","rectangle","circle","marker","circlemarker","EditOnlyControl","defaultPosition","popup","listSecondary","Map","classes","bboxRect","setBBoxRect","markers","entries","media","extended_entities","normalized","id_str","images","bounding_box","bottomLeftCorner","topRightCorner","groups","key","keys","Math","abs","join","Marker","reverse","Icon","iconUrl","markerImg","profile_image_url","media_url","popupAnchor","Point","Popup","List","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","image","display","_northEast","_southWest","evt","_bounds","layers","getLayers","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","FeatureGroup","tresholdSlider","NotifySettings","email","setEmail","treshold","setTreshold","confirm","put","event","gutterBottom","Slider","classNames","newT","valueLabelDisplay","min","max","status","float","statusText","stopped","running","leftButton","NUMBER_RE","CONFIRM_RE","ScheduleTweet","sent","setSent","setText","timer","setTimer","setHours","check","setCheck","wordcloud","intervalMS","floor","H_TO_MS","selectedComponents","handleCheck","checked","handleSend","Promise","all","html2canvas","getElementById","useCORS","screenshots","canvas","dataUrl","toDataURL","substring","lastIndexOf","msg","autoFocus","input","multiline","fullWidth","FormControlLabel","control","Checkbox","clearInterval","setInterval","fabIcon","childrenContainer","ShowDialogIcon","isOpen","setOpen","Fab","onClose","maxWidth","keepMounted","StreamParams","startIcon","size","Tweet","extended_tweet","profile_image_url_https","full_text","primaryTypographyProps","secondaryTypographyProps","triggerDownload","link","createElement","body","appendChild","download","href","click","removeChild","TweetList","imgFiles","file","substr","importJSON","fileEvt","uploadedFile","files","reader","FileReader","onload","dump","toValidate","validateJSON","old","readAsText","downloadImages","zip","JSZip","fetch","blob","generateAsync","URL","createObjectURL","isTweetListEmpty","isImageListEmpty","Tooltip","onChangeHandler","accept","onchange","triggerUpload","encodeURIComponent","logo","justifyContent","logoImg","logoTitle","fontFamily","WelcomingAnimation","containerRef","lottie","loadAnimation","render","loop","autoplay","animationData","ref","slider","enableTooltip","enableOptimizations","deterministic","fontSizes","fontStyle","rotations","transitionDuration","tooltipOptions","WordCloud","arrayOfWords","setArrayOfWords","numWords","setNumWords","useLayoutEffect","compressedData","toCollapse","collapsed","findIndex","collapse","listOfWord","accumulator","word","startsWith","toLowerCase","getWordList","slice","newValue","marks","callbacks","getWordTooltip","maxWords","words","Home","IntroAnimation","useSpring","from","opacity","to","delay","config","duration","MainAnimation","div","DarkTheme","createMuiTheme","typography","danger","info","LightTheme","ThemeContext","prefersDarkMode","useMediaQuery","ThemeProvider","App","exact","component","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.0e8f2454.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles, Button, Dialog, DialogTitle } from '@material-ui/core';\r\nimport { DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\n\r\nimport { ErrorBoundary } from 'react-error-boundary';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  dialog: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  \r\n  submitButton: {\r\n    margin: 10,\r\n    width: 100,\r\n    fontWeight: 800,\r\n    color: 'white',\r\n    backgroundColor: theme.palette.primary.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.dark,\r\n      color: theme.palette.primary.light,\r\n    },\r\n  },\r\n}));\r\n\r\nconst AlertWindow = ({error, resetErrorBoundary}) => {\r\n  const { submitButton, dialog } = useStyles();\r\n  const { title, message } = error;\r\n  return (\r\n    <Dialog open={true}>\r\n      <DialogTitle className={dialog}>{title || 'Error'}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{message}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          color=\"default\"\r\n          variant=\"contained\"\r\n          className={submitButton}\r\n          onClick={resetErrorBoundary}\r\n        >\r\n          OK\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\n\r\nconst UserError = (message, reset, title) => {\r\n  const error = Error(message);\r\n  const defaultCB = () => {};\r\n\r\n  error.title = title || 'Error';\r\n  error.message = message || 'Generic error message';\r\n  error.reset = reset || defaultCB;\r\n  return (error);\r\n};\r\n\r\n\r\nconst ErrorCatcher = ({ children }) => {\r\n  const [error, setError] = useState(undefined);\r\n  const handleReset = () => {\r\n    error.reset();\r\n    setError(undefined);\r\n  }\r\n\r\n  return (\r\n    <ErrorBoundary\r\n      FallbackComponent={AlertWindow}\r\n      onError={err => setError(err)}\r\n      onReset={handleReset}\r\n    >\r\n      {children}\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\n\r\nexport { UserError, AlertWindow };\r\nexport default ErrorCatcher;","export const BASE_URL = 'http://localhost:4000';\r\n\r\n// API ENDPOINTS\r\nexport const GEO_FILTER = `${BASE_URL}/api/geoFilter`;\r\nexport const GET_IDS = `${BASE_URL}/api/getUserIDs`;\r\nexport const REQUEST_TOKEN = `${BASE_URL}/api/requestToken`;\r\nexport const AUTH = `${BASE_URL}/api/auth`;\r\nexport const SEND_TWEET = `${BASE_URL}/api/sendTweet`;\r\nexport const NOTIFICATION = `${BASE_URL}/api/notification`;\r\nexport const SETTINGS = `${BASE_URL}/api/settings`;\r\n\r\nexport const MAP_ID = 'map';\r\nexport const WORDCLOUD_ID = 'wordcloud';\r\n\r\nexport const FABsDesc = {\r\n    params: `Here you can select a specific user and/or a specific hashtag to retrieve your tweeets.\r\n    You could also select a specific area on the map to get all the tweet geoocalized in that area`,\r\n\r\n    filter: `Here you can select specific filter to be applied to the list currently on the client`,\r\n\r\n    schedule: `By authenticating here you can set an interval upon wich a tweet will be published on your\r\n    account with the given text and an image of the map and/or the picture odf the wordcloud`,\r\n\r\n    email: `Here you can set a reminder for when a certain treshold (in number of tweet captured) is surpassed\r\n    once the treshold is reached an email to the given address will be sent, remember to check the spam`\r\n}\r\n","import React, { useContext, useState } from 'react';\r\n\r\nconst UserContext = React.createContext();\r\n/**\r\n * authProps = {\r\n    accessToken: res.oauth_token,\r\n    accessTokenSecret: res.oauth_token_secret,\r\n    userId: res.user_id,\r\n    screenName: res.screen_name,\r\n  }\r\n */\r\nexport const UserProvider = ({ children }) => {\r\n  const [authProps, setAuthProps] = useState(undefined);\r\n  const provided = { authProps, setAuthProps };\r\n  return <UserContext.Provider value={provided}>{children}</UserContext.Provider>;\r\n};\r\n\r\nexport const useUser = () => {\r\n  const value = useContext(UserContext);\r\n  if (value === null) {\r\n    throw new Error('useUser is outside of a UserProvider');\r\n  }\r\n  return value;\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Grid, CircularProgress, Typography } from '@material-ui/core';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport { AUTH } from '../constants';\r\nimport { useUser } from '../context/UserContext';\r\n\r\nconst useQuery = () => {\r\n  const location = useLocation();\r\n  return new URLSearchParams(location.search);\r\n};\r\n\r\nconst Auth = () => {\r\n  const query = useQuery();\r\n  const oauthToken = query.get('oauth_token');\r\n  const oauthVerifier = query.get('oauth_verifier');\r\n\r\n  const { setAuthProps } = useUser();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const requestAccess = async () => {\r\n      try {\r\n        const result = await axios.get(AUTH, { params: { oauthToken, oauthVerifier } });\r\n        setAuthProps(result.data);\r\n        history.push('/');\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    requestAccess();\r\n  }, [oauthToken, oauthVerifier, history, setAuthProps]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container justify=\"center\" xs={12}>\r\n        <Typography variant=\"h3\" color=\"primary\">\r\n          You are about to be redirected... Let's hope everything goes well!\r\n        </Typography>\r\n        <CircularProgress />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from 'react';\r\nimport { TextField, makeStyles, InputAdornment } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textField: {\r\n    margin: 5,\r\n    width: 250,\r\n    '& fieldset': {\r\n      borderWidth: 2,\r\n      borderRadius: 25,\r\n    },\r\n    '& .MuiTypography-colorTextSecondary': {\r\n      color: theme.palette.primary.main,\r\n    },\r\n    '& .Mui-error': {\r\n      color: theme.palette.secondary.main,\r\n    }\r\n  },\r\n}));\r\n\r\nconst InputField = ({\r\n  label,\r\n  fieldName,\r\n  value,\r\n  handler,\r\n  text,\r\n  helperText,\r\n  hasError,\r\n  ...others\r\n}) => {\r\n  const { textField } = useStyles();\r\n  return (\r\n    <TextField\r\n      className={textField}\r\n      variant=\"filled\"\r\n      label={label}\r\n      value={value}\r\n      name={fieldName}\r\n      onChange={handler}\r\n      helperText={hasError && helperText}\r\n      error={hasError}\r\n      InputProps={{\r\n        startAdornment: text && <InputAdornment position=\"start\">{text}</InputAdornment>,\r\n      }}\r\n      {...others}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\nimport { FormControl, InputLabel, Select, MenuItem, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  select: {\r\n    height: 50,\r\n    width: 150,\r\n    marginBottom: 20,\r\n  },\r\n}));\r\n\r\nconst SelectField = ({ id, label, value, onChange, children }) => {\r\n  const { select } = useStyles();\r\n\r\n  return (\r\n    <FormControl>\r\n      <InputLabel id={id}>{label}</InputLabel>\r\n      <Select\r\n        name={id}\r\n        labelId={id}\r\n        value={value === undefined ? '' : value}\r\n        className={select}\r\n        onChange={onChange}\r\n      >\r\n        <MenuItem value=\"\">-----</MenuItem>\r\n        {children}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SelectField;\r\n","import React, { useState, useMemo } from 'react';\r\nimport { Button, Grid, MenuItem, makeStyles } from '@material-ui/core';\r\nimport { InputField, SelectField } from './InputComponent';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  genericInput: {\r\n    height: 50,\r\n    width: 200,\r\n    marginBottom: 20,\r\n  },\r\n  button: { padding: 10, fontWeight: 800, color: 'white' },\r\n}));\r\n\r\nconst Filters = ({ list, setFilteredList }) => {\r\n  const [filters, setFilters] = useState({});\r\n  const { genericInput, button } = useStyles();\r\n\r\n  const specificInputFieldProps = {\r\n    shrink: true,\r\n    style: { color: 'white' },\r\n  };\r\n\r\n  const onChangeFilter = (e) => {\r\n    setFilters({ ...filters, [e.target.name]: e.target.value });\r\n    console.log({ ...filters, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const { countryList, cityList } = useMemo(() => {\r\n    const countryList = list.reduce((accList, tweet) => {\r\n      if (tweet.place && !accList.includes(tweet.place.country_code))\r\n        accList.push(tweet.place.country_code);\r\n      return accList;\r\n    }, []);\r\n\r\n    const cityList = list.reduce((accList, tweet) => {\r\n      if (tweet.place && !accList.includes(tweet.place.name))\r\n        accList.push(tweet.place.name);\r\n      return accList;\r\n    }, []);\r\n\r\n    return { countryList, cityList };\r\n  }, [list]);\r\n\r\n  const applyFilter = () => {\r\n    const { minDate, maxDate, minTime, maxTime, geoloc, country, city } = filters;\r\n    const filteredTweets = list.filter((tweet) => {\r\n      const timestamp = new Date(tweet.created_at);\r\n      const minTimestamp = minDate && new Date(`${minDate} ${minTime || '00:00'}`);\r\n      const maxTimestamp = maxDate && new Date(`${maxDate} ${maxTime || '23:59'}`);\r\n      const isGeolocalized = tweet.user.geo_enabled;\r\n      const cityName = (tweet.place || {}).name;\r\n      const countryCode = (tweet.place || {}).country_code;\r\n\r\n      return (\r\n        (!minTimestamp ? true : timestamp >= minTimestamp) &&\r\n        (!maxTimestamp ? true : timestamp <= maxTimestamp) &&\r\n        (!geoloc ? true : geoloc === isGeolocalized) &&\r\n        (!country ? true : country === countryCode) &&\r\n        (!city ? true : city === cityName)\r\n      );\r\n    });\r\n\r\n    setFilteredList(filteredTweets);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container xs={12} justify=\"space-evenly\">\r\n        <InputField\r\n          type=\"date\"\r\n          label=\"Min date\"\r\n          fieldName=\"minDate\"\r\n          value={filters.minDate}\r\n          className={genericInput}\r\n          onChange={onChangeFilter}\r\n          InputLabelProps={specificInputFieldProps}\r\n        />\r\n        <InputField\r\n          type=\"date\"\r\n          label=\"Max date\"\r\n          fieldName=\"maxDate\"\r\n          value={filters.maxDate}\r\n          className={genericInput}\r\n          onChange={onChangeFilter}\r\n          InputLabelProps={specificInputFieldProps}\r\n        />\r\n        <InputField\r\n          type=\"time\"\r\n          label=\"Min time\"\r\n          fieldName=\"minTime\"\r\n          value={filters.minTime}\r\n          className={genericInput}\r\n          onChange={onChangeFilter}\r\n          InputLabelProps={specificInputFieldProps}\r\n        />\r\n        <InputField\r\n          type=\"time\"\r\n          label=\"Max time\"\r\n          fieldName=\"maxTime\"\r\n          value={filters.maxTime}\r\n          className={genericInput}\r\n          onChange={onChangeFilter}\r\n          InputLabelProps={specificInputFieldProps}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid container xs={12} justify=\"space-evenly\">\r\n        <SelectField\r\n          id=\"geoloc\"\r\n          label=\"Geolocalization\"\r\n          value={filters.geoloc}\r\n          onChange={onChangeFilter}\r\n        >\r\n          <MenuItem value={true}>Yes</MenuItem>\r\n          <MenuItem value={false}>No</MenuItem>\r\n        </SelectField>\r\n\r\n        <SelectField\r\n          id=\"country\"\r\n          label=\"Country\"\r\n          value={filters.country}\r\n          onChange={onChangeFilter}\r\n        >\r\n          {countryList.map((element) => {\r\n            return <MenuItem value={element}>{element}</MenuItem>;\r\n          })}\r\n        </SelectField>\r\n\r\n        <SelectField\r\n          id=\"city\"\r\n          label=\"City\"\r\n          value={filters.city}\r\n          onChange={onChangeFilter}\r\n        >\r\n          {cityList.map((element) => {\r\n            return <MenuItem value={element}>{element}</MenuItem>;\r\n          })}\r\n        </SelectField>\r\n      </Grid>\r\n      <Grid container xs={12} justify=\"space-evenly\">\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={applyFilter}\r\n          className={button}\r\n        >\r\n          Apply\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            setFilters({});\r\n            setFilteredList(list);\r\n          }}\r\n          className={button}\r\n        >\r\n          Reset\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { RadarChart, PolarGrid, PolarAngleAxis, Tooltip, Radar } from 'recharts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  areachart: {\r\n    '& tspan': {\r\n      fill: theme.palette.type === 'dark' ? 'white' : 'black',\r\n    },\r\n  },\r\n}));\r\n\r\nconst AreaChart = ({ data }) => {\r\n  const { areachart } = useStyles();\r\n  return (\r\n    <RadarChart width={700} height={300} data={data} className={areachart}>\r\n      <PolarGrid />\r\n      <PolarAngleAxis dataKey=\"subject\" />\r\n      <Tooltip />\r\n      <Radar dataKey=\"count\" stroke=\"#1da1f2\" fill=\"#1da1f2\" fillOpacity={0.6} />\r\n    </RadarChart>\r\n  );\r\n};\r\n\r\nexport default AreaChart;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { AreaChart, Area, XAxis, YAxis, Tooltip, CartesianGrid } from 'recharts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  barchart: {\r\n    '& tspan': {\r\n      fill: theme.palette.type === 'dark' ? 'white' : 'black',\r\n    },\r\n  },\r\n}));\r\n\r\nconst BarChart = ({ data }) => {\r\n  const { barchart } = useStyles();\r\n  return (\r\n    <AreaChart width={700} height={300} data={data} className={barchart}>\r\n      <Area type=\"monotone\" dataKey=\"count\" stroke=\"#1da1f2\" fill=\"#1da1f2\" />\r\n      <CartesianGrid strokeDasharray=\"1 1\" />\r\n      <XAxis dataKey=\"value\" />\r\n      <YAxis />\r\n      <Tooltip />\r\n    </AreaChart>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { PieChart, Pie, Tooltip, Legend, Cell } from 'recharts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  piechart: {\r\n    '& .recharts-legend-item-text': {\r\n      color: theme.palette.type === 'dark' ? 'white' : 'black',\r\n    },\r\n  },\r\n}));\r\n\r\nconst PieGraph = ({ data, colors }) => {\r\n  const { piechart } = useStyles();\r\n\r\n  return (\r\n    <PieChart width={700} height={300} className={piechart}>\r\n      <Pie dataKey=\"count\" data={data} outerRadius={80} label={{ fill: 'white' }}>\r\n        {data.map((voice, index) => (\r\n          <Cell name={voice.name} key={voice.name} fill={colors[index]} />\r\n        ))}\r\n      </Pie>\r\n      <Tooltip />\r\n      <Legend verticalAlign=\"top\" height={36} iconSize={30} iconType=\"circle\" />\r\n    </PieChart>\r\n  );\r\n};\r\n\r\nexport default PieGraph;\r\n","import React from 'react';\r\nimport { Table, TableHead, TableRow, TableCell, TableBody, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  table: {\r\n    minWidth: \"max-content\",\r\n    width: \"70%\",\r\n    height: \"auto\",\r\n    marginRight: \"20%\",\r\n    marginLeft: \"20%\",\r\n    marginBottom: 60\r\n  }\r\n}));\r\n\r\nconst TableChart = ({ data, header }) => {\r\n  const { table } = useStyles();\r\n  data.sort((prev, next) => next.count - prev.count);\r\n\r\n  return (\r\n    <Table stickyHeader className={table}>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell align=\"center\">{header[0]}</TableCell>\r\n          <TableCell align=\"center\">{header[1]}</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n\r\n      <TableBody>\r\n        {data.map((voice) => (\r\n          <TableRow key={voice.name}>\r\n            <TableCell align=\"center\">{voice.name}</TableCell>\r\n            <TableCell align=\"center\">{voice.count || 'No data avaiable'}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default TableChart;\r\n","import React, { useMemo } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nimport { AreaChart, BarChart, PieChart, TableChart } from './GraphSnippets';\r\n\r\nconst statsTemplate = {\r\n  hours: [\r\n    { name: '00', value: '0', count: 0 },\r\n    { name: '01', value: '1', count: 0 },\r\n    { name: '02', value: '2', count: 0 },\r\n    { name: '03', value: '3', count: 0 },\r\n    { name: '04', value: '4', count: 0 },\r\n    { name: '05', value: '5', count: 0 },\r\n    { name: '06', value: '6', count: 0 },\r\n    { name: '07', value: '7', count: 0 },\r\n    { name: '08', value: '8', count: 0 },\r\n    { name: '09', value: '9', count: 0 },\r\n    { name: '10', value: '10', count: 0 },\r\n    { name: '11', value: '11', count: 0 },\r\n    { name: '12', value: '12', count: 0 },\r\n    { name: '13', value: '13', count: 0 },\r\n    { name: '14', value: '14', count: 0 },\r\n    { name: '15', value: '15', count: 0 },\r\n    { name: '16', value: '16', count: 0 },\r\n    { name: '17', value: '17', count: 0 },\r\n    { name: '18', value: '18', count: 0 },\r\n    { name: '19', value: '19', count: 0 },\r\n    { name: '20', value: '20', count: 0 },\r\n    { name: '21', value: '21', count: 0 },\r\n    { name: '22', value: '22', count: 0 },\r\n    { name: '23', value: '23', count: 0 },\r\n  ],\r\n  days: [\r\n    { name: 'Sun', subject: 'Sunday', count: 0 },\r\n    { name: 'Mon', subject: 'Monday', count: 0 },\r\n    { name: 'Tue', subject: 'Tuesday', count: 0 },\r\n    { name: 'Wed', subject: 'Wednesday', count: 0 },\r\n    { name: 'Thu', subject: 'Thursday', count: 0 },\r\n    { name: 'Fri', subject: 'Friday', count: 0 },\r\n    { name: 'Sat', subject: 'Saturday', count: 0 },\r\n  ],\r\n  geolocalization: [\r\n    { name: 'No', count: 0 },\r\n    { name: 'Yes', count: 0 },\r\n  ],\r\n  retweet: [\r\n    { name: 'No', count: 0 },\r\n    { name: 'Yes', count: 0 },\r\n  ],\r\n  cities: [],\r\n  countries: [],\r\n};\r\n\r\nconst Graphs = ({ list }) => {\r\n  const updatedStats = useMemo(() => {\r\n    const stats = JSON.parse(JSON.stringify(statsTemplate));\r\n\r\n    const updateStats = (next) => {\r\n      const { hours, days, geolocalization, retweet, cities, countries } = stats;\r\n      hours[next.creationHour].count++;\r\n      days[next.creationDay].count++;\r\n      geolocalization[Number(next.isGeolocalized)].count++;\r\n      retweet[Number(next.isRetweeted)].count++;\r\n\r\n      const cityToUpdate = cities.find((city) => city.name === next.cityName);\r\n      const { countryCode, countryName } = next.country;\r\n      const countryToUpdate = countries.find((country) => country.code === countryCode);\r\n\r\n      if (cityToUpdate) cityToUpdate.count++;\r\n      else cities.push({ name: next.cityName, count: 1 });\r\n\r\n      if (countryToUpdate) countryToUpdate.count++;\r\n      else\r\n        countries.push({\r\n          name: countryName,\r\n          code: countryCode,\r\n          count: 1,\r\n        });\r\n    };\r\n\r\n    list.forEach((tweet) => {\r\n      const timestamp = new Date(tweet.created_at);\r\n      const creationHour = timestamp.getHours();\r\n      const creationDay = timestamp.getDay();\r\n      const isGeolocalized = Boolean(tweet.coordinates || tweet.place);\r\n      const isRetweeted = Boolean(tweet.retweeted_status);\r\n      const cityName = (tweet.place || {}).name || 'Not known';\r\n      const countryName = (tweet.place || {}).country || 'Not known';\r\n      const countryCode = (tweet.place || {}).country_code || 'Not known';\r\n      updateStats({\r\n        creationHour,\r\n        creationDay,\r\n        isGeolocalized,\r\n        isRetweeted,\r\n        cityName,\r\n        country: { countryName, countryCode },\r\n      });\r\n    });\r\n\r\n    return stats;\r\n  }, [list]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container justify=\"center\" xs={12}>\r\n        <Typography variant=\"h6\" color=\"primary\" align=\"center\">\r\n          Tweets volume by hour\r\n        </Typography>\r\n        <BarChart data={updatedStats.hours} />\r\n      </Grid>\r\n\r\n      <Grid container justify=\"center\" xs={12}>\r\n        <Typography variant=\"h6\" color=\"primary\" align=\"center\">\r\n          Tweets volume by day\r\n        </Typography>\r\n        <AreaChart data={updatedStats.days} />\r\n      </Grid>\r\n      <Grid container justify=\"center\" xs={12}>\r\n        <Typography variant=\"h6\" color=\"primary\" align=\"center\">\r\n          % of geolocalized tweets\r\n        </Typography>\r\n        <PieChart data={updatedStats.geolocalization} colors={['#1da1f2', '#00C49F']} />\r\n      </Grid>\r\n\r\n      <Grid container justify=\"center\" xs={12}>\r\n        <Typography variant=\"h6\" color=\"primary\" align=\"center\">\r\n          % of retweeted tweets\r\n        </Typography>\r\n        <PieChart data={updatedStats.retweet} colors={['#1da1f2', '#00C49F']} />\r\n      </Grid>\r\n\r\n      <Grid container justify=\"center\" xs={12}>\r\n        <Typography variant=\"h6\" color=\"primary\" align=\"center\">\r\n          Tweets country origin\r\n        </Typography>\r\n        <TableChart data={updatedStats.countries} header={['Country', 'Tweet No.']} />\r\n      </Grid>\r\n\r\n      <Grid container justify=\"center\" xs={12}>\r\n        <Typography variant=\"h6\" color=\"primary\" align=\"center\">\r\n          Tweets city origin\r\n        </Typography>\r\n        <TableChart data={updatedStats.cities} header={['City', 'Tweet No.']} />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Graphs;\r\n","import React, { useState } from 'react';\r\nimport { Tabs, Tab, Box, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    margin: 20,\r\n    width: '95%',\r\n  },\r\n  container: {\r\n    margin: 10,\r\n    maxHeight: '78vh',\r\n    overflowY: 'auto',\r\n    scrollbarWidth: 'none',\r\n  },\r\n}));\r\n\r\nconst InsightTabs = ({ children }) => {\r\n  const { root, container } = useStyles();\r\n  const [focusedTab, setFocused] = useState(0);\r\n\r\n  return (\r\n    <div className={root}>\r\n      <Tabs value={focusedTab} onChange={(_, newVal) => setFocused(newVal)} textColor=\"secondary\">\r\n        {children.map((child, index) => (\r\n          <Tab value={index} key={index} label={child.props.tabName} />\r\n        ))}\r\n      </Tabs>\r\n      <Box className={container}>{children[focusedTab]}</Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsightTabs;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-draw/dist/leaflet.draw.css';\r\n\r\nimport { Grid, Typography, makeStyles } from '@material-ui/core';\r\nimport Settings from '@material-ui/icons/Settings';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AlarmIcon from '@material-ui/icons/Alarm';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\n\r\nimport {\r\n  BASE_URL,\r\n  GEO_FILTER,\r\n  GET_IDS,\r\n  REQUEST_TOKEN,\r\n  SETTINGS,\r\n  FABsDesc,\r\n} from '../constants';\r\nimport { ShowDialogIcon, StreamParams, Map, InsightTabs, TweetList, WordCloud } from '.';\r\nimport { NotifySettings, ScheduleTweet, Filters, Graphs } from '.';\r\nimport { UserError } from './AlertWindow';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    top: 0,\r\n    left: 0,\r\n    margin: 0,\r\n    padding: 0,\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: theme.palette.background.default,\r\n    overflow: 'hidden',\r\n  },\r\n  header: {\r\n    height: '10%',\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  mainContainer: {\r\n    height: 850,\r\n    '& .leaflet-container': {\r\n      margin: 20,\r\n      width: '95%',\r\n      height: '84vh',\r\n    },\r\n  },\r\n  settingsIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst socket = io(BASE_URL, {\r\n  transports: ['websocket'],\r\n  path: '/socket', // needed for cors in dev\r\n});\r\n\r\nfunction getCookieValue(a) {\r\n  const b = document.cookie.match('(^|;)\\\\s*' + a + '\\\\s*=\\\\s*([^;]+)');\r\n  return b ? b.pop() : null;\r\n}\r\n\r\nconst COORDINATE_RE = /^-?[\\d]{1,3}[.][\\d]+$/;\r\n\r\nconst MainContainer = () => {\r\n  const launch = useErrorHandler();\r\n  const { paper, header, mainContainer, settingsIcon } = useStyles();\r\n  // To set the id of the current stream\r\n  const [streamId, setStreamId] = useState();\r\n  const [tweets, setTweets] = useState([]);\r\n  const [tweetsFiltered, setTweetsFiltered] = useState(tweets);\r\n\r\n  const [coords, setCoords] = useState({\r\n    ne: {\r\n      lat: '',\r\n      lng: '',\r\n    },\r\n    sw: {\r\n      lat: '',\r\n      lng: '',\r\n    },\r\n  });\r\n  const [params, setParams] = useState({\r\n    track: '', // hashtag\r\n    follow: '', // user\r\n  });\r\n\r\n  useEffect(() => {\r\n    setTweetsFiltered(tweets);\r\n  }, [tweets]);\r\n\r\n  //cookie\r\n  useEffect(() => {\r\n    const fetchSettings = async (streamId) => {\r\n      try {\r\n        const res = await axios.get(`${SETTINGS}?streamId=${streamId}`);\r\n        const settings = res.data;\r\n\r\n        if (settings.locations) {\r\n          const coordinates = settings.locations.split(',');\r\n          setCoords({\r\n            ne: {\r\n              lat: coordinates[3],\r\n              lng: coordinates[2],\r\n            },\r\n            sw: {\r\n              lat: coordinates[1],\r\n              lng: coordinates[0],\r\n            },\r\n          });\r\n        }\r\n\r\n        if (settings.track) {\r\n          setParams({ track: settings.track });\r\n        }\r\n\r\n        if (settings.follow) {\r\n          setParams({ follow: settings.follow });\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    const oldStreamId = getCookieValue('streamId');\r\n\r\n    if (oldStreamId) {\r\n      setStreamId(oldStreamId);\r\n      fetchSettings(oldStreamId);\r\n      socket.emit('attach', { streamId: oldStreamId });\r\n      socket.on('tweet', (tweet) => {\r\n        setTweets((prevTweets) => [...prevTweets, tweet]);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const startStream = async ({ coords, params }) => {\r\n    let streamParameters; // in OR\r\n    let constraints; // in AND, AFTER collection\r\n    let follow = undefined;\r\n    if (params.follow) {\r\n      try {\r\n        // pray that it is formatted correctly\r\n        const res = await axios.get(`${GET_IDS}?names=${params.follow}`);\r\n        follow = res.data;\r\n      } catch (err) {\r\n        launch(UserError(\"One of the users you asked for doesn't exist!\"));\r\n        return;\r\n      }\r\n    }\r\n\r\n    // if coordinates were given, they have the priority, and after we'll check everything else\r\n    if (coords) {\r\n      streamParameters = {\r\n        locations: `${coords.sw.lng},${coords.sw.lat},${coords.ne.lng},${coords.ne.lat}`,\r\n      };\r\n      constraints = { ...params, follow };\r\n    }\r\n    // if a username is given, we want to know everything he's tweeted, and then select on hashtag\r\n    else if (params.follow) {\r\n      streamParameters = { follow };\r\n      constraints = { track: params.track };\r\n    }\r\n    // otherwise, we only select based on hashtag\r\n    else if (params.track) {\r\n      streamParameters = {\r\n        track: params.track,\r\n      };\r\n      constraints = {};\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        GEO_FILTER,\r\n        {\r\n          streamParameters,\r\n          constraints,\r\n        },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n\r\n      setStreamId(res.data);\r\n      socket.emit('attach', { streamId: res.data });\r\n      socket.on('tweet', (tweet) => {\r\n        setTweets((prevTweets) => [...prevTweets, tweet]);\r\n      });\r\n      socket.on('error', console.log);\r\n    } catch (err) {\r\n      launch(UserError(\"Couldn't start stream on server, please retry!\"));\r\n    }\r\n  };\r\n\r\n  const stopStream = async () => {\r\n    try {\r\n      await axios.delete(GEO_FILTER, {\r\n        data: { id: streamId },\r\n        headers: { Authorization: '***' },\r\n        withCredentials: true,\r\n      });\r\n      setStreamId(null);\r\n      socket.off('tweet');\r\n      socket.off('error');\r\n      document.cookie = 'streamId=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n    } catch (err) {\r\n      launch(UserError(\"Couldn't stop stream on the server, please retry!\"));\r\n    }\r\n  };\r\n\r\n  const handleAuthentication = async () => {\r\n    try {\r\n      const res = await axios.get(REQUEST_TOKEN);\r\n      window.location.replace(\r\n        `https://api.twitter.com/oauth/authenticate?oauth_token=${res.data.token}`\r\n      );\r\n    } catch (err) {\r\n      console.error(err.response);\r\n    }\r\n  };\r\n\r\n  const onAddRect = useCallback(\r\n    (nelat, nelng, swlat, swlng) =>\r\n      setCoords({\r\n        ne: { lat: nelat, lng: nelng },\r\n        sw: { lat: swlat, lng: swlng },\r\n      }),\r\n    []\r\n  );\r\n\r\n  const handleParamsChange = (e) =>\r\n    setParams({ ...params, [e.target.name]: e.target.value });\r\n\r\n  const handleStart = () => {\r\n    // get all values flattened\r\n    const values = Object.values(coords)\r\n      .map((value) => [value.lat, value.lng])\r\n      .flat();\r\n    // Start a not geolocalized\r\n    if (values.every((value) => value === '')) {\r\n      startStream({ coords: '', params });\r\n    }\r\n    // Start a geolocalized\r\n    else if (values.every((value) => value && COORDINATE_RE.test(value)))\r\n      startStream({ coords, params });\r\n    else {\r\n      const onReset = () =>\r\n        setCoords({\r\n          ne: {\r\n            lat: '',\r\n            lng: '',\r\n          },\r\n          sw: {\r\n            lat: '',\r\n            lng: '',\r\n          },\r\n        });\r\n      launch(UserError('There is an error with your geolocalized box', onReset));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={paper}>\r\n      <Grid container className={header} justify=\"space-around\" alignItems=\"center\">\r\n        {/* Box with stream params */}\r\n        <Grid item xs={4}>\r\n          <ShowDialogIcon\r\n            icon={<Settings className={settingsIcon} />}\r\n            name={!streamId ? 'Start' : 'Running...'}\r\n            desc={FABsDesc['params']}\r\n          >\r\n            <StreamParams\r\n              activeStream={streamId}\r\n              params={params}\r\n              onStart={handleStart}\r\n              onStop={stopStream}\r\n              onParamChange={handleParamsChange}\r\n            />\r\n          </ShowDialogIcon>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography color=\"primary\" variant=\"h3\" align=\"center\" justify=\"center\">\r\n            TWITTER TRACKER\r\n            <Typography>{tweets.length} tweets collected</Typography>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item container xs={4} justify=\"flex-end\">\r\n          <ShowDialogIcon\r\n            icon={<SearchIcon />}\r\n            iconOnly\r\n            name=\"Filter tweets\"\r\n            desc={FABsDesc['filter']}\r\n          >\r\n            <Filters list={tweets} setFilteredList={setTweetsFiltered} />\r\n          </ShowDialogIcon>\r\n          <ShowDialogIcon\r\n            icon={<AlarmIcon />}\r\n            iconOnly\r\n            name=\"Scheduled tweet\"\r\n            desc={FABsDesc['schedule']}\r\n          >\r\n            <ScheduleTweet handleAuth={handleAuthentication} />\r\n          </ShowDialogIcon>\r\n          <ShowDialogIcon\r\n            icon={<EmailIcon />}\r\n            iconOnly\r\n            name=\"E-mail notification\"\r\n            desc={FABsDesc['email']}\r\n            disabled={!streamId}\r\n          >\r\n            <NotifySettings streamId={streamId} />\r\n          </ShowDialogIcon>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Grid layout for Map and InsightTabs */}\r\n      <Grid container>\r\n        <Grid item xs={6} className={mainContainer}>\r\n          <Map\r\n            tweetsList={tweetsFiltered}\r\n            setCoordinates={onAddRect}\r\n            showToolbars={!streamId}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6} className={mainContainer}>\r\n          <InsightTabs>\r\n            <TweetList list={tweetsFiltered} setList={setTweets} tabName=\"Tweet List\" />\r\n            <WordCloud list={tweetsFiltered} tabName=\"Wordcloud\" />\r\n            <Graphs list={tweetsFiltered} tabName=\"Graphs\" />\r\n          </InsightTabs>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","export default __webpack_public_path__ + \"static/media/twitter-marker.9ed4db7e.png\";","import { useCallback, useEffect, useRef } from 'react';\r\nimport leaflet, { Control } from 'leaflet';\r\n// How is possible that this is not used but the component fails if this is not imported\r\nimport Draw from 'leaflet-draw';\r\nimport {\r\n  useLeafletContext,\r\n  createElementHook,\r\n  createLeafComponent,\r\n} from '@react-leaflet/core';\r\n\r\nconst createControlComponent = (createInstance) => {\r\n  function createElement(props, context) {\r\n    const { layerContainer } = context;\r\n    const { position } = props;\r\n    const options = {\r\n      position,\r\n      edit: {\r\n        featureGroup: layerContainer,\r\n      },\r\n    };\r\n\r\n    return { instance: createInstance(options), context };\r\n  }\r\n  const useElement = createElementHook(createElement);\r\n  const useControl = createControlHook(useElement);\r\n  return createLeafComponent(useControl);\r\n};\r\n\r\nconst createControlHook = (useElement) => {\r\n  return function useLeafletControl(props) {\r\n    const context = useLeafletContext();\r\n    const elementRef = useElement(props, context);\r\n    const { instance } = elementRef.current;\r\n    const positionRef = useRef(props.position);\r\n    const { position, onCreated, onEdit, onDeleted } = props;\r\n\r\n    const onDrawCreate = useCallback(\r\n      (e) => {\r\n        context.layerContainer.addLayer(e.layer);\r\n        onCreated(e);\r\n      },\r\n      [context.layerContainer, onCreated]\r\n    );\r\n\r\n    useEffect(\r\n      function addControl() {\r\n        instance.addTo(context.map);\r\n        context.map.on(leaflet.Draw.Event.CREATED, onDrawCreate);\r\n\r\n        if (onDeleted) {\r\n          context.map.on(leaflet.Draw.Event.DELETED, onDeleted);\r\n        }\r\n\r\n        if (onEdit) {\r\n          context.map.on(leaflet.Draw.Event.EDITRESIZE, onEdit);\r\n          context.map.on(leaflet.Draw.Event.EDITMOVE, onEdit);\r\n        }\r\n\r\n        return function removeControl() {\r\n          context.map.off(leaflet.Draw.Event.CREATED, onDrawCreate);\r\n\r\n          if (onDeleted) {\r\n            context.map.off(leaflet.Draw.Event.DELETED, onDeleted);\r\n          }\r\n\r\n          if (onEdit) {\r\n            context.map.off(leaflet.Draw.Event.EDITRESIZE, onEdit);\r\n            context.map.off(leaflet.Draw.Event.EDITMOVE, onEdit);\r\n          }\r\n\r\n          instance.remove();\r\n        };\r\n      },\r\n      [context.map, instance, onDrawCreate, onDeleted, onEdit]\r\n    );\r\n\r\n    useEffect(\r\n      function updateControl() {\r\n        if (position != null && position !== positionRef.current) {\r\n          instance.setPosition(position);\r\n          positionRef.current = position;\r\n        }\r\n      },\r\n      [instance, position]\r\n    );\r\n\r\n    return elementRef;\r\n  };\r\n};\r\n\r\nexport const DrawRectangleControl = createControlComponent(\r\n  (options) =>\r\n    new Control.Draw({\r\n      ...options,\r\n      draw: {\r\n        polyline: false,\r\n        polygon: false,\r\n        rectangle: true,\r\n        circle: false,\r\n        marker: false,\r\n        circlemarker: false,\r\n      },\r\n      edit: {\r\n        ...options.edit,\r\n        edit: false,\r\n        remove: false,\r\n      },\r\n    })\r\n);\r\n\r\nexport const EditOnlyControl = createControlComponent(\r\n  (options) =>\r\n    new Control.Draw({\r\n      ...options,\r\n      draw: {\r\n        polyline: false,\r\n        polygon: false,\r\n        rectangle: false,\r\n        circle: false,\r\n        marker: false,\r\n        circlemarker: false,\r\n      },\r\n    })\r\n);\r\n","import React, { useMemo, useEffect, useState, useCallback } from 'react';\r\nimport leaflet from 'leaflet';\r\nimport { MapContainer, TileLayer, Marker, Popup, FeatureGroup } from 'react-leaflet';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\n\r\nimport markerImg from '../assets/twitter-marker.png';\r\nimport { EditOnlyControl, DrawRectangleControl } from './EditControl';\r\n\r\nconst defaultPosition = [44.494704, 11.342005];\r\nconst THRESHOLD = 0.000001;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  list: {\r\n    maxHeight: '300px',\r\n    overflow: 'auto',\r\n    '& .MuiListItem-gutters': {\r\n      padding: '0 10px',\r\n    },\r\n  },\r\n  popup: {\r\n    '& .leaflet-popup-content': {\r\n      margin: '0',\r\n      padding: '0',\r\n    },\r\n  },\r\n  listSecondary: {\r\n    '& p': {\r\n      margin: '0',\r\n      color: 'black',\r\n    },\r\n  },\r\n}));\r\n\r\nconst getPic = (tweet) =>\r\n  tweet.images.length === 0 ? tweet.user.profile_image_url : tweet.images[0].media_url;\r\n\r\nconst normalizeList = (tweets) =>\r\n  tweets\r\n    .map((tweet) => {\r\n      const media = (tweet.extended_entities && tweet.extended_entities.media) || [];\r\n      const normalized = {\r\n        id: tweet.id_str,\r\n        text: tweet.text,\r\n        user: tweet.user,\r\n        images: media.filter((item) => item.type === 'photo'),\r\n      };\r\n\r\n      // Accurate coordinates (a point)\r\n      if (tweet.coordinates && tweet.coordinates.type === 'Point') {\r\n        return {\r\n          ...normalized,\r\n          coordinates: tweet.coordinates.coordinates,\r\n        };\r\n      }\r\n\r\n      // Approximated coordinates (a square/rectangle)\r\n      if (tweet.place && tweet.place.bounding_box) {\r\n        // Coordinates vector is structured like this [[[BL, TL, TR, BR]]]\r\n        const bottomLeftCorner = tweet.place.bounding_box.coordinates[0][0];\r\n        const topRightCorner = tweet.place.bounding_box.coordinates[0][2];\r\n        return {\r\n          ...normalized,\r\n          coordinates: [\r\n            (bottomLeftCorner[0] + topRightCorner[0]) / 2,\r\n            (bottomLeftCorner[1] + topRightCorner[1]) / 2,\r\n          ],\r\n        };\r\n      }\r\n\r\n      return null;\r\n    })\r\n    .filter(Boolean)\r\n    .reduce((groups, tweet) => {\r\n      const keys = Object.keys(groups).map((coords) => coords.split(',').map(Number));\r\n      const key = keys.find(\r\n        (coords) => Math.abs(coords[0] - tweet.coordinates[0]) <= THRESHOLD\r\n      );\r\n\r\n      if (key) {\r\n        groups[key].push(tweet);\r\n      } else {\r\n        groups[tweet.coordinates.join(',')] = [tweet];\r\n      }\r\n\r\n      return groups;\r\n    }, {});\r\n\r\nconst Map = ({ tweetsList, setCoordinates, showToolbars }) => {\r\n  const classes = useStyles();\r\n  const [bboxRect, setBBoxRect] = useState();\r\n  const markers = useMemo(\r\n    () =>\r\n      Object.entries(normalizeList(tweetsList)).map(([coords, tweets], index) => (\r\n        <Marker\r\n          position={coords.split(',').reverse()}\r\n          key={index}\r\n          icon={\r\n            new leaflet.Icon({\r\n              iconUrl: tweets.length > 1 ? markerImg : getPic(tweets[0]),\r\n              popupAnchor: [0, -15],\r\n              iconSize:\r\n                tweets.length > 1\r\n                  ? new leaflet.Point(22.8, 35.8)\r\n                  : new leaflet.Point(30, 30),\r\n            })\r\n          }\r\n        >\r\n          <Popup className={classes.popup}>\r\n            <List className={classes.list}>\r\n              {tweets.map((tweet) => (\r\n                <ListItem key={tweet.id} alignItems=\"flex-start\">\r\n                  <ListItemAvatar>\r\n                    <Avatar alt={tweet.user.name} src={tweet.user.profile_image_url} />\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    className={classes.listSecondary}\r\n                    primary={tweet.user.name}\r\n                    secondary={tweet.text}\r\n                  />\r\n                  <div>\r\n                    {tweet.images.map((image, index) => (\r\n                      <img\r\n                        key={index}\r\n                        src={image.media_url}\r\n                        alt=\"User's shared content\"\r\n                        width=\"80\"\r\n                        style={{ display: 'block' }}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Popup>\r\n        </Marker>\r\n      )),\r\n    [tweetsList, classes]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (bboxRect) {\r\n      const { _northEast, _southWest } = bboxRect;\r\n      setCoordinates(_northEast.lat, _northEast.lng, _southWest.lat, _southWest.lng);\r\n    } else {\r\n      setCoordinates('', '', '', '');\r\n    }\r\n  }, [bboxRect, setCoordinates]);\r\n\r\n  const onEdit = useCallback((evt) => {\r\n    setBBoxRect(evt.layer._bounds);\r\n  }, []);\r\n\r\n  const onDeleted = useCallback((evt) => {\r\n    const layers = evt.layers.getLayers();\r\n    if (layers.length > 0) {\r\n      setBBoxRect(null);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <MapContainer center={defaultPosition} zoom={9} scrollWheelZoom={true}>\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      {markers}\r\n      <FeatureGroup>\r\n        {showToolbars &&\r\n          (!bboxRect ? (\r\n            <DrawRectangleControl position=\"topleft\" onCreated={onEdit} />\r\n          ) : (\r\n            <EditOnlyControl position=\"topleft\" onEdit={onEdit} onDeleted={onDeleted} />\r\n          ))}\r\n      </FeatureGroup>\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { Typography, Slider, Grid, Button, makeStyles } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\nimport { InputField } from './InputComponent';\r\nimport { NOTIFICATION } from '../constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tresholdSlider: {\r\n    width: 70,\r\n  },\r\n  submitButton: {\r\n    margin: 20,\r\n    width: 100,\r\n    fontWeight: 800,\r\n    color: 'white',\r\n    backgroundColor: theme.palette.primary.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.dark,\r\n      color: theme.palette.primary.light,\r\n    },\r\n  },\r\n}));\r\n\r\nconst NotifySettings = ({ streamId }) => {\r\n  const { tresholdSlider, submitButton } = useStyles();\r\n  const [email, setEmail] = useState(undefined);\r\n  const [treshold, setTreshold] = useState(100);\r\n  // const [mailSent, setSent] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   if (!mailSent && email && count >= treshold) {\r\n  //     setSent(true);\r\n  //     axios\r\n  //       .put(NOTIFICATION, { address: email, count: count })\r\n  //       .catch((_) => setSent(false));\r\n  //   }\r\n  // }, [mailSent, email, count, treshold]);\r\n\r\n  const confirm = useCallback(async () => {\r\n    try {\r\n      await axios.put(NOTIFICATION, { streamId, email, treshold });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [streamId, email, treshold]);\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs={4}>\r\n        <InputField label=\"e-mail\" handler={(event) => setEmail(event.target.value)} />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Typography gutterBottom>Treshold</Typography>\r\n        <Slider\r\n          classNames={tresholdSlider}\r\n          value={treshold}\r\n          onChange={(_, newT) => setTreshold(newT)}\r\n          valueLabelDisplay=\"auto\"\r\n          min={0}\r\n          max={1000}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={submitButton}\r\n          onClick={confirm}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotifySettings;\r\n","import React, { useMemo, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  Button,\r\n  DialogActions,\r\n  TextField,\r\n  makeStyles,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { useUser } from '../context/UserContext';\r\nimport { MAP_ID, WORDCLOUD_ID, SEND_TWEET } from '../constants';\r\n\r\nimport html2canvas from 'html2canvas';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  status: { float: 'right', fontWeight: 'normal' },\r\n  statusText: {},\r\n  stopped: {\r\n    backgroundColor: '#cccccc',\r\n    borderRadius: '5px',\r\n    padding: `${theme.spacing(0.5)}px ${theme.spacing(1)}px`,\r\n  },\r\n  running: {\r\n    backgroundColor: '#86e038',\r\n    borderRadius: '5px',\r\n    padding: `${theme.spacing(0.5)}px ${theme.spacing(1)}px`,\r\n  },\r\n  leftButton: {\r\n    flexGrow: '1 0 0',\r\n  },\r\n}));\r\n\r\nconst NUMBER_RE = /^[0-9|.]+$/;\r\nconst CONFIRM_RE = /^[0-9]+(\\.[0-9]+)?$/;\r\nconst H_TO_MS = (hours) => Math.floor(hours * 60 * 60 * 1000);\r\n\r\n// to keep it in two components, scheduleTweet check if user is authenticated,\r\n// and if not calls handleAuth to complete authentication.\r\nconst ScheduleTweet = ({ handleAuth }) => {\r\n  const { authProps } = useUser();\r\n  const [sent, setSent] = useState(false);\r\n  const [text, setText] = useState('');\r\n  const [timer, setTimer] = useState(undefined);\r\n  const [hours, setHours] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const [check, setCheck] = useState({ [MAP_ID]: false, [WORDCLOUD_ID]: false });\r\n  const { map, wordcloud } = check;\r\n  const classes = useStyles();\r\n  const intervalMS = useMemo(() => H_TO_MS(hours), [hours]);\r\n  const selectedComponents = useMemo(\r\n    () => Object.keys(check).filter((key) => check[key]),\r\n    [check]\r\n  );\r\n\r\n  const handleCheck = (evt) => {\r\n    setCheck((prev) => ({ ...prev, [evt.target.name]: evt.target.checked }));\r\n  };\r\n\r\n  const handleInterval = (e) => {\r\n    const input = e.target.value;\r\n    if (NUMBER_RE.test(input) || input === '') {\r\n      setHours(input);\r\n      setError('');\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    try {\r\n      const screenshots = await Promise.all(\r\n        selectedComponents.map((id) =>\r\n          html2canvas(document.getElementById(id), {\r\n            useCORS: true,\r\n          })\r\n        )\r\n      );\r\n      const media = screenshots.map((canvas) => {\r\n        const dataUrl = canvas.toDataURL();\r\n        return dataUrl.substring(dataUrl.lastIndexOf(',') + 1);\r\n      });\r\n      const msg = {\r\n        text: text,\r\n        media,\r\n      };\r\n      await axios.post(SEND_TWEET, { msg, authProps });\r\n      setSent(true);\r\n    } catch (err) {\r\n      console.error(err.response.data.message);\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    if (CONFIRM_RE.test(hours)) {\r\n      setTimer(setInterval(handleSend, intervalMS));\r\n      // check low amount;\r\n      if (Number(hours) < 0.05) setError('careful with low numbers, twitter is garbage');\r\n    } else setError(\"that's not a number cunt\");\r\n  };\r\n  const cleanAll = () => {\r\n    clearInterval(timer);\r\n    setTimer(undefined);\r\n    setSent(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!authProps ? (\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleAuth}>\r\n          AUTHENTICATE\r\n        </Button>\r\n      ) : (\r\n        <>\r\n          <TextField\r\n            helperText={error || 'how many hours should we wait?'}\r\n            error={!!error}\r\n            autoFocus\r\n            value={hours}\r\n            onChange={handleInterval}\r\n            label=\"Interval between tweets\"\r\n            id=\"tweet-interval\"\r\n            disabled={!!timer}\r\n          />\r\n          <span className={classes.status}>\r\n            <Typography variant=\"button\"> status: </Typography>\r\n            {!timer ? (\r\n              <span className={classes.stopped}>stopped</span>\r\n            ) : (\r\n              <span className={classes.running}>running</span>\r\n            )}\r\n          </span>\r\n          <TextField\r\n            multiline\r\n            value={text}\r\n            onChange={(event) => {\r\n              if (event.target.value.length <= 140) setText(event.target.value);\r\n            }}\r\n            helperText={`${text.length}/${140}`}\r\n            margin=\"dense\"\r\n            id=\"tweet-text\"\r\n            label=\"Tweet Text\"\r\n            type=\"text\"\r\n            disabled={!!timer}\r\n            fullWidth\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={map}\r\n                name={MAP_ID}\r\n                color=\"primary\"\r\n                onChange={handleCheck}\r\n                disabled={!!timer}\r\n              />\r\n            }\r\n            label=\"Map\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={wordcloud}\r\n                name={WORDCLOUD_ID}\r\n                color=\"primary\"\r\n                onChange={handleCheck}\r\n                disabled={!!timer}\r\n              />\r\n            }\r\n            label=\"Word cloud\"\r\n          />\r\n          {sent && <div>Seems your tweet went through!</div>}\r\n          <DialogActions>\r\n            <Button onClick={cleanAll} color=\"primary\" disabled={!timer}>\r\n              Change Interval\r\n            </Button>\r\n            <Button className={classes.leftButton} onClick={handleSend} disabled={!text}>\r\n              SEND NOW!\r\n            </Button>\r\n            <Button\r\n              onClick={handleConfirm}\r\n              color=\"primary\"\r\n              disabled={!(hours && text && !timer)}\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </DialogActions>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScheduleTweet;\r\n","import React, { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport { Fab, Grid, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  fabIcon: {\r\n    marginLeft: 30,\r\n    marginRight: 30,\r\n  },\r\n  childrenContainer: {\r\n    height: 'auto',\r\n  }\r\n});\r\n\r\nconst ShowDialogIcon = ({ icon, iconOnly, name, desc, disabled, children }) => {\r\n  const [isOpen, setOpen] = useState(false);\r\n  const { fabIcon, childrenContainer} = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Fab\r\n        className={fabIcon}\r\n        variant={iconOnly ? 'round' : 'extended'}\r\n        onClick={() => setOpen((prev) => !prev)}\r\n        disabled={disabled}\r\n      >\r\n        {icon}\r\n        {iconOnly || name}\r\n      </Fab>\r\n      <Dialog open={isOpen} onClose={() => setOpen(false)} maxWidth=\"md\" keepMounted>\r\n        <DialogTitle>{name}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{desc}</DialogContentText>\r\n          <Grid container className={childrenContainer} justify=\"space-evenly\">\r\n            {children}\r\n          </Grid>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowDialogIcon;\r\n","import React from 'react';\r\nimport { Button, CircularProgress, makeStyles } from '@material-ui/core';\r\n\r\nimport { InputField } from './InputComponent';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  submitButton: {\r\n    margin: 10,\r\n    width: 100,\r\n    fontWeight: 800,\r\n    color: 'white',\r\n    backgroundColor: theme.palette.primary.main,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.dark,\r\n      color: theme.palette.primary.light,\r\n    },\r\n    '&:.MuiButton-text': {\r\n      marginLeft: 70\r\n    },\r\n  },\r\n}));\r\n\r\nconst StreamParams = ({ activeStream, params, onStart, onStop, onParamChange }) => {\r\n  const { submitButton } = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <InputField\r\n        label=\"Hashtag\"\r\n        fieldName=\"track\"\r\n        text=\"#\"\r\n        value={params.track}\r\n        handler={onParamChange}\r\n      />\r\n      <InputField\r\n        label=\"User\"\r\n        fieldName=\"follow\"\r\n        text=\"@\"\r\n        value={params.follow}\r\n        handler={onParamChange}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={submitButton}\r\n        onClick={activeStream ? onStop : onStart}\r\n        startIcon={activeStream ? <CircularProgress color=\"#ffffff\" size={20}/> : undefined}\r\n      >\r\n        {activeStream ? 'STOP ' : 'START'}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StreamParams;\r\n/* \r\n  ToDo here there are still some cleanings to be done\r\n  There's a strange issue with autocompleton in the input form\r\n*/\r\n","import React, { useMemo } from 'react';\r\nimport { List, Button, Grid, Avatar, Tooltip } from '@material-ui/core';\r\nimport { ListItem, ListItemText, ListItemAvatar } from '@material-ui/core';\r\nimport JSZip from 'jszip';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\n\r\nimport { useErrorHandler } from 'react-error-boundary';\r\nimport { UserError } from './AlertWindow';\r\n\r\n// The single tweet item in the list\r\nconst Tweet = ({ user, text, extended_tweet, id }) => {\r\n  return (\r\n    <ListItem key={`tcard_id${id}`} alignItems=\"flex-start\">\r\n      <ListItemAvatar>\r\n        <Avatar alt={user.name} src={user.profile_image_url_https} />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={user.name}\r\n        secondary={extended_tweet ? extended_tweet.full_text : text}\r\n        primaryTypographyProps={{ variant: 'body1', color: 'secondary' }}\r\n        secondaryTypographyProps={{ align: 'justify', variant: 'body2' }}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nconst triggerDownload = ({ name, url }) => {\r\n  const link = document.createElement('a');\r\n  document.body.appendChild(link);\r\n  link.download = name;\r\n  link.href = url;\r\n  link.click();\r\n  document.body.removeChild(link);\r\n};\r\n\r\nconst triggerUpload = (onChangeHandler) => {\r\n  const link = document.createElement('input');\r\n  document.body.appendChild(link);\r\n  link.type = 'file';\r\n  link.accept = 'application/json';\r\n  link.onchange = onChangeHandler;\r\n  link.click();\r\n  document.body.removeChild(link);\r\n};\r\n\r\nconst TweetList = ({ list, setList }) => {\r\n  const launch = useErrorHandler();\r\n  const imgFiles = useMemo(\r\n    () =>\r\n      list.reduce((images, tweet) => {\r\n        if (tweet.extended_entities && tweet.extended_entities.media) {\r\n          const medias = tweet.extended_entities.media;\r\n          medias.forEach(({ type, media_url }) => {\r\n            if (type === 'photo')\r\n              images.push({\r\n                file: media_url.substr(media_url.lastIndexOf('/') + 1),\r\n                url: media_url,\r\n              });\r\n          });\r\n        }\r\n\r\n        return images;\r\n      }, []),\r\n    [list]\r\n  );\r\n\r\n  const exportJSON = () => {\r\n    const url =\r\n      'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(list));\r\n    triggerDownload({ name: 'TweetsDump.json', url });\r\n  };\r\n\r\n  const validateJSON = (toValidate) => {\r\n    const isCompliant = toValidate.every((item) => item.id && item.user && item.text);\r\n    if (!isCompliant) {\r\n      throw new Error();\r\n    }\r\n  };\r\n\r\n  const importJSON = (fileEvt) => {\r\n    const uploadedFile = fileEvt.target.files[0];\r\n    if (uploadedFile && uploadedFile.type === 'application/json') {\r\n      const reader = new FileReader();\r\n      // Callback on successfull read\r\n      reader.onload = (event) => {\r\n        try {\r\n          const dump = JSON.parse(event.target.result);\r\n          validateJSON(dump);\r\n          setList((old) => [...old, ...dump]);\r\n        } catch (err) {\r\n          launch(UserError('The given log do not match the format requested'));\r\n        }\r\n      };\r\n      reader.readAsText(uploadedFile, 'utf-8');\r\n    }\r\n  };\r\n\r\n  const downloadImages = async () => {\r\n    const zip = new JSZip();\r\n    for (const { file, url } of imgFiles) {\r\n      const response = await fetch(url);\r\n      const blob = await response.blob();\r\n      zip.file(file, blob);\r\n    }\r\n\r\n    try {\r\n      const result = await zip.generateAsync({ type: 'blob' });\r\n      const url = URL.createObjectURL(result);\r\n      triggerDownload({ name: 'Photos.zip', url });\r\n    } catch (err) {\r\n      launch(UserError(\"Couldn't start image download\"));\r\n    }\r\n  };\r\n\r\n  const isTweetListEmpty = list.length === 0;\r\n  const isImageListEmpty = imgFiles.length === 0;\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        {/* Tooltip to manipulate the data */}\r\n        <Grid item xs={12}>\r\n          <Tooltip title=\"Import tweet list\">\r\n            <Button onClick={() => triggerUpload(importJSON)}>\r\n              <PublishIcon />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip title=\"Export tweets\">\r\n            <Button onClick={exportJSON} disabled={isTweetListEmpty}>\r\n              <GetAppIcon />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip title=\"Download Images\">\r\n            <Button onClick={downloadImages} disabled={isImageListEmpty}>\r\n              <PhotoLibraryIcon />\r\n            </Button>\r\n          </Tooltip>\r\n          <Tooltip title=\"Clear list\">\r\n            <Button onClick={() => setList([])} disabled={isTweetListEmpty}>\r\n              <DeleteIcon />\r\n            </Button>\r\n          </Tooltip>\r\n        </Grid>\r\n\r\n        {/* List of th tweets captured by the client */}\r\n        <Grid item xs={12}>\r\n          <List>\r\n            {list.map((tweet) => (\r\n              <Tweet key={tweet.id} {...tweet} />\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetList;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport animationData from '../assets/TwitterLottie.json';\r\nimport lottie from 'lottie-web';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  logo: {\r\n    top: 0,\r\n    left: 0,\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    position: 'absolute',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  logoImg: {\r\n    height: '250px',\r\n    color: '#1da1f2',\r\n  },\r\n  logoTitle: {\r\n    marginLeft: '-20px',\r\n    color: '#1da1f2',\r\n    fontFamily: \"Helvetica\",\r\n  },\r\n}));\r\n\r\nconst WelcomingAnimation = () => {\r\n  const { logo, logoImg, logoTitle } = useStyles();\r\n  // Reference to the container on wich the animation is loaded\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    lottie.loadAnimation({\r\n      container: containerRef.current,\r\n      render: 'svg',\r\n      loop: false,\r\n      autoplay: true,\r\n      animationData,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"logo\" className={logo}>\r\n      <div id=\"logoImg\" className={logoImg} ref={containerRef} />\r\n      <h1 id=\"logoTitle\" className={logoTitle}>\r\n        TWITTER TRACKER\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomingAnimation;\r\n","import React, { useState, useLayoutEffect } from 'react';\r\nimport { Slider, makeStyles, Grid } from '@material-ui/core';\r\nimport ReactWordcloud from 'react-wordcloud';\r\n\r\nimport 'tippy.js/dist/tippy.css';\r\nimport 'tippy.js/themes/material.css';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  slider: {\r\n    width: '80%',\r\n    marginTop: 40,\r\n    marginLeft: 70,\r\n  },\r\n}));\r\n\r\nconst options = {\r\n  colors: ['#f6d7de', '#bed2f8', '#f8f8b0', '#77DD77', '#FFCBA5', '#B3EEFF'],\r\n  enableTooltip: true,\r\n  enableOptimizations: true,\r\n  deterministic: false,\r\n  fontFamily: 'Helvetica',\r\n  fontSizes: [15, 70],\r\n  fontStyle: 'normal',\r\n  fontWeight: 'bold',\r\n  rotations: 0,\r\n  transitionDuration: 1000,\r\n  tooltipOptions: { theme: 'material' },\r\n};\r\n\r\nconst collapse = (toCollapse) => {\r\n  const collapsed = [];\r\n  toCollapse.split(' ').forEach((item) => {\r\n    const index = collapsed.findIndex((element) => element.text === item);\r\n    if (index !== -1) collapsed[index].value += 1;\r\n    else collapsed.push({ text: item, value: 1 });\r\n  });\r\n  return collapsed.sort((a, b) => b.value - a.value);\r\n};\r\n\r\nconst getWordList = (list) => {\r\n  let listOfWord = '';\r\n  let accumulator = '';\r\n  // Create an agglomerate with all the text from the list\r\n  list.forEach((item) => (accumulator += `${item.text} `));\r\n  accumulator = accumulator.split(' ');\r\n  // Separate every word in the conglomerate and purges links\r\n  accumulator.forEach((word) => {\r\n    if (!word.startsWith('http') || !word.startsWith('@'))\r\n      listOfWord += `${word.toLowerCase()} `;\r\n  });\r\n  return listOfWord;\r\n};\r\n\r\nconst WordCloud = ({ list }) => {\r\n  const { slider } = useStyles();\r\n  const [arrayOfWords, setArrayOfWords] = useState([]);\r\n  const [numWords, setNumWords] = useState(20);\r\n  const handleSlider = (_, newValue) => {\r\n    setNumWords(newValue);\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (list.length > 0) {\r\n      const wordData = getWordList(list);\r\n      const compressedData = collapse(wordData);\r\n      setArrayOfWords(compressedData.slice(0, 100));\r\n    } else {\r\n      setArrayOfWords([]);\r\n    }\r\n  }, [list]);\r\n\r\n  const getWordTooltip = (word) => `${word.text} (${word.value})`;\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Slider\r\n          color=\"secondary\"\r\n          valueLabelDisplay=\"on\"\r\n          className={slider}\r\n          onChange={handleSlider}\r\n          value={numWords}\r\n          max={100}\r\n          min={1}\r\n          marks={[\r\n            { value: 1, label: 'Sola una parola' },\r\n            { value: 100, label: '100 parole' },\r\n          ]}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <ReactWordcloud\r\n          callbacks={{ getWordTooltip }}\r\n          options={options}\r\n          maxWords={numWords}\r\n          words={arrayOfWords}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default WordCloud;\r\n","import React from 'react';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nimport { WelcomingAnimation, MainContainer } from '.';\r\n\r\nconst ANIMATED = process.env.NODE_ENV === 'production';\r\n\r\nconst Home = () => {\r\n  const IntroAnimation = useSpring({\r\n    from: { opacity: 1 },\r\n    to: { opacity: 0 },\r\n    delay: 4000,\r\n    config: { duration: 500 },\r\n  });\r\n\r\n  const MainAnimation = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: 1 },\r\n    delay: 4500,\r\n    config: { duration: 1000 },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {ANIMATED ? (\r\n        <>\r\n          <animated.div style={IntroAnimation}>\r\n            <WelcomingAnimation />\r\n          </animated.div>\r\n          <animated.div style={MainAnimation}>\r\n            <MainContainer />\r\n          </animated.div>\r\n        </>\r\n      ) : (\r\n        <MainContainer />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useMemo } from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\n\r\nconst DarkTheme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: 'Montserrat, Roboto, Helvetica, sans-serif',\r\n  },\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: '#1DA1F2',\r\n    },\r\n    secondary: {\r\n      main: '#FECCA8',\r\n    },\r\n  },\r\n  status: {\r\n    danger: '#ff0033',\r\n    info: '#ffffff',\r\n  },\r\n});\r\n\r\nconst LightTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'light',\r\n  },\r\n  status: {\r\n    danger: '#ff0033',\r\n    info: '#ffffff',\r\n  },\r\n});\r\n\r\nconst ThemeContext = ({ children }) => {\r\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n\r\n  const theme = useMemo(() => (prefersDarkMode ? DarkTheme : LightTheme), [\r\n    prefersDarkMode,\r\n  ]);\r\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\r\n};\r\n\r\nexport default ThemeContext;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport ErrorCatcher from './components/AlertWindow';\r\nimport Home from './components/Home';\r\nimport Auth from './components/Auth';\r\n\r\nimport ThemeProvider from './context/ThemeContext';\r\nimport { UserProvider } from './context/UserContext';\r\n\r\nconst App = () => {\r\n  return (\r\n    <UserProvider>\r\n      <ThemeProvider>\r\n        <ErrorCatcher>\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route path=\"/auth\" component={Auth} />\r\n            </Switch>\r\n          </Router>\r\n        </ErrorCatcher>\r\n      </ThemeProvider>\r\n    </UserProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}